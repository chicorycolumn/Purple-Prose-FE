{"ast":null,"code":"var _jsxFileName = \"/home/heihachu/fe-news/src/VoteDisplayOnArticle.jsx\";\nimport React, { Component } from \"react\";\nimport { voteOnArticle } from \"./utils/patchUtils\";\nimport styles from \"./css/ArticlePreview.module.css\"; //The intention of all this is to check the actual number of votes an article has to display the user having voted new votecount.\n//It basically works, just that you don't see the visual feedback if you already have a downvote on sth, then refresh page (which sets voteBuffer to 0 instead of -1)\n//and so then yes the request is sent off fine, but you dont see the feedback. Should be resolvable by using jxn table that already exists to populate whether\n//up arrow should be red or blue kinda thing.\n\nclass VoteDisplayOnArticle extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      voteBuffer: 0,\n      error: false\n    };\n\n    this.handleVote = voteDirection => {\n      if (this.props.currentUser !== null && this.props.currentUser !== undefined && this.props.currentUser !== \"\") {\n        const {\n          article_id,\n          currentUser\n        } = this.props; //Undoing the invalid double-vote the user just gave.\n\n        voteOnArticle(currentUser, article_id, voteDirection).catch(err => {\n          this.setState(currState => {\n            return {\n              error: true,\n              voteBuffer: currState.voteBuffer + (voteDirection === -1 ? 1 : -1)\n            };\n          });\n        }); //Ambicrementing the vote regardless.\n\n        this.setState(currState => {\n          return {\n            voteBuffer: currState.voteBuffer + (voteDirection === 1 ? 1 : -1),\n            error: false\n          };\n        }); // let newCastedVote = this.state.voteBuffer;\n        // if (newCastedVote < 1 && voteDirection === 1) {\n        //   newCastedVote++;\n        // } else if (newCastedVote > -1 && voteDirection === -1) {\n        //   newCastedVote--;\n        // }\n        // this.setState({ voteBuffer: newCastedVote });\n      } else {\n        alert(\"To vote on the latest news, log in or sign up!\");\n      }\n    };\n  }\n\n  componentDidMount() {//get whether user has up or downvoted this article from DB, and use that to set this.state.voteBuffer.\n  }\n\n  render() {\n    return React.createElement(\"p\", {\n      className: styles.votes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: styles.voteEmoji,\n      onClick: () => {\n        this.handleVote(1);\n      },\n      role: \"img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.voteBuffer === 1 ? \"▲\" : \"▵\"), React.createElement(\"p\", {\n      className: styles.voteCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.voteBuffer + (this.props.votes || 0)), React.createElement(\"span\", {\n      className: styles.voteEmoji,\n      onClick: () => {\n        this.handleVote(-1);\n      },\n      role: \"img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.voteBuffer === -1 ? \"▼\" : \"▿\"));\n  }\n\n}\n\nexport default VoteDisplayOnArticle;","map":{"version":3,"sources":["/home/heihachu/fe-news/src/VoteDisplayOnArticle.jsx"],"names":["React","Component","voteOnArticle","styles","VoteDisplayOnArticle","state","voteBuffer","error","handleVote","voteDirection","props","currentUser","undefined","article_id","catch","err","setState","currState","alert","componentDidMount","render","votes","voteEmoji","voteCount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,MAAP,MAAmB,iCAAnB,C,CAEA;AACA;AACA;AACA;;AAEA,MAAMC,oBAAN,SAAmCH,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAC3CI,KAD2C,GACnC;AAAEC,MAAAA,UAAU,EAAE,CAAd;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KADmC;;AAAA,SAO3CC,UAP2C,GAO9BC,aAAa,IAAI;AAC5B,UACE,KAAKC,KAAL,CAAWC,WAAX,KAA2B,IAA3B,IACA,KAAKD,KAAL,CAAWC,WAAX,KAA2BC,SAD3B,IAEA,KAAKF,KAAL,CAAWC,WAAX,KAA2B,EAH7B,EAIE;AACA,cAAM;AAAEE,UAAAA,UAAF;AAAcF,UAAAA;AAAd,YAA8B,KAAKD,KAAzC,CADA,CAGA;;AACAR,QAAAA,aAAa,CAACS,WAAD,EAAcE,UAAd,EAA0BJ,aAA1B,CAAb,CAAsDK,KAAtD,CAA4DC,GAAG,IAAI;AACjE,eAAKC,QAAL,CAAcC,SAAS,IAAI;AACzB,mBAAO;AACLV,cAAAA,KAAK,EAAE,IADF;AAELD,cAAAA,UAAU,EAAEW,SAAS,CAACX,UAAV,IAAwBG,aAAa,KAAK,CAAC,CAAnB,GAAuB,CAAvB,GAA2B,CAAC,CAApD;AAFP,aAAP;AAID,WALD;AAMD,SAPD,EAJA,CAaA;;AACA,aAAKO,QAAL,CAAcC,SAAS,IAAI;AACzB,iBAAO;AACLX,YAAAA,UAAU,EAAEW,SAAS,CAACX,UAAV,IAAwBG,aAAa,KAAK,CAAlB,GAAsB,CAAtB,GAA0B,CAAC,CAAnD,CADP;AAELF,YAAAA,KAAK,EAAE;AAFF,WAAP;AAID,SALD,EAdA,CAqBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACD,OAjCD,MAiCO;AACLW,QAAAA,KAAK,CAAC,gDAAD,CAAL;AACD;AACF,KA5C0C;AAAA;;AAG3CC,EAAAA,iBAAiB,GAAG,CAClB;AACD;;AAyCDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAG,MAAA,SAAS,EAAEjB,MAAM,CAACkB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAElB,MAAM,CAACmB,SADpB;AAEE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKd,UAAL,CAAgB,CAAhB;AACD,OAJH;AAKE,MAAA,IAAI,EAAC,KALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOG,KAAKH,KAAL,CAAWC,UAAX,KAA0B,CAA1B,GAA8B,GAA9B,GAAoC,GAPvC,CADF,EAUE;AAAG,MAAA,SAAS,EAAEH,MAAM,CAACoB,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKlB,KAAL,CAAWC,UAAX,IAAyB,KAAKI,KAAL,CAAWW,KAAX,IAAoB,CAA7C,CADH,CAVF,EAaE;AACE,MAAA,SAAS,EAAElB,MAAM,CAACmB,SADpB;AAEE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKd,UAAL,CAAgB,CAAC,CAAjB;AACD,OAJH;AAKE,MAAA,IAAI,EAAC,KALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOG,KAAKH,KAAL,CAAWC,UAAX,KAA0B,CAAC,CAA3B,GAA+B,GAA/B,GAAqC,GAPxC,CAbF,CADF;AAyBD;;AAxE0C;;AA2E7C,eAAeF,oBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { voteOnArticle } from \"./utils/patchUtils\";\nimport styles from \"./css/ArticlePreview.module.css\";\n\n//The intention of all this is to check the actual number of votes an article has to display the user having voted new votecount.\n//It basically works, just that you don't see the visual feedback if you already have a downvote on sth, then refresh page (which sets voteBuffer to 0 instead of -1)\n//and so then yes the request is sent off fine, but you dont see the feedback. Should be resolvable by using jxn table that already exists to populate whether\n//up arrow should be red or blue kinda thing.\n\nclass VoteDisplayOnArticle extends Component {\n  state = { voteBuffer: 0, error: false };\n\n  componentDidMount() {\n    //get whether user has up or downvoted this article from DB, and use that to set this.state.voteBuffer.\n  }\n\n  handleVote = voteDirection => {\n    if (\n      this.props.currentUser !== null &&\n      this.props.currentUser !== undefined &&\n      this.props.currentUser !== \"\"\n    ) {\n      const { article_id, currentUser } = this.props;\n\n      //Undoing the invalid double-vote the user just gave.\n      voteOnArticle(currentUser, article_id, voteDirection).catch(err => {\n        this.setState(currState => {\n          return {\n            error: true,\n            voteBuffer: currState.voteBuffer + (voteDirection === -1 ? 1 : -1)\n          };\n        });\n      });\n\n      //Ambicrementing the vote regardless.\n      this.setState(currState => {\n        return {\n          voteBuffer: currState.voteBuffer + (voteDirection === 1 ? 1 : -1),\n          error: false\n        };\n      });\n\n      // let newCastedVote = this.state.voteBuffer;\n\n      // if (newCastedVote < 1 && voteDirection === 1) {\n      //   newCastedVote++;\n      // } else if (newCastedVote > -1 && voteDirection === -1) {\n      //   newCastedVote--;\n      // }\n      // this.setState({ voteBuffer: newCastedVote });\n    } else {\n      alert(\"To vote on the latest news, log in or sign up!\");\n    }\n  };\n\n  render() {\n    return (\n      <p className={styles.votes}>\n        <span\n          className={styles.voteEmoji}\n          onClick={() => {\n            this.handleVote(1);\n          }}\n          role=\"img\"\n        >\n          {this.state.voteBuffer === 1 ? \"▲\" : \"▵\"}\n        </span>\n        <p className={styles.voteCount}>\n          {this.state.voteBuffer + (this.props.votes || 0)}\n        </p>\n        <span\n          className={styles.voteEmoji}\n          onClick={() => {\n            this.handleVote(-1);\n          }}\n          role=\"img\"\n        >\n          {this.state.voteBuffer === -1 ? \"▼\" : \"▿\"}\n        </span>\n      </p>\n    );\n  }\n}\n\nexport default VoteDisplayOnArticle;\n"]},"metadata":{},"sourceType":"module"}