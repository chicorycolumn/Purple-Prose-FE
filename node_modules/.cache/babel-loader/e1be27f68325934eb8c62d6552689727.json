{"ast":null,"code":"var _jsxFileName = \"/home/heihachu/fe-news/src/SingleArticle.jsx\";\nimport React from \"react\";\nimport styles from \"./css/SingleArticle.module.css\";\nimport { Router, Link, navigate } from \"@reach/router\";\nimport { voteOnArticle, postNewComment } from \"./utils/patchUtils\";\nimport VoteDisplayOnArticle from \"./VoteDisplayOnArticle\";\nimport { fetchArticleByID, fetchArticleWithComments } from \"./utils/getUtils\";\nimport CommentGrid from \"./CommentGrid\";\nimport CreateComment from \"./CreateComment\";\nimport DateFormat from \"./DateFormat\";\n\nclass SingleArticle extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      createCommentDisplaying: false,\n      newCommentInput: \"\",\n      article: null,\n      comments: null,\n      isLoading: true,\n      votes: 0,\n      // refreshTicket: 0,\n      // upToDateWithCommentCount: true,\n      // temporaryCommentIncrement: 0,\n      userSubmitsEmpty: false,\n      err: null\n    };\n\n    this.upwardEmptyCheckReset = () => {\n      this.setState({\n        userSubmitsEmpty: false\n      });\n    };\n\n    this.sneakyUpwardNewCommentInput = newCommentInput => {\n      this.setState({\n        newCommentInput\n      });\n    };\n\n    this.sneakyUpwardAmbicrement = crement => {\n      this.setState(currState => {\n        return {\n          temporaryCommentIncrement: currState.temporaryCommentIncrement + crement\n        };\n      });\n    };\n\n    this.sneakyUpwardDelete = comment_id => {\n      this.setState(currState => {\n        let newCommentArray = currState.comments.filter(comment => comment.comment_id !== comment_id);\n        return {\n          comments: newCommentArray\n        };\n      });\n    };\n\n    this.sneakyUpwardChange = (err, article, comments) => {\n      if (err) {\n        this.setState({\n          err\n        });\n      } else this.setState({\n        article,\n        comments,\n        isLoading: false,\n        votes: article.votes // refreshTicket: Math.random(),\n        // temporaryCommentIncrement: 0,\n        // upToDateWithCommentCount: true\n\n      });\n    };\n\n    this.voteOnArticleUpstream = voteDirection => {\n      this.setState(currState => {\n        return {\n          votes: currState.votes + voteDirection\n        };\n      });\n    };\n\n    this.submitNewComment = event => {\n      event.preventDefault();\n\n      if (this.state.newCommentInput === \"\") {\n        this.setState({\n          userSubmitsEmpty: true\n        });\n      } else postNewComment(this.props.currentUser, this.state.article.article_id, this.state.newCommentInput).then(newlyComment => {\n        this.setState(currState => {\n          return {\n            newCommentInput: \"\",\n            createCommentDisplaying: false,\n            comments: [newlyComment, ...currState.comments],\n            upToDateWithCommentCount: false,\n            temporaryCommentIncrement: currState.temporaryCommentIncrement + 1\n          };\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetchArticleWithComments(this.sneakyUpwardChange, this.props.article_id);\n  }\n\n  render() {\n    if (this.state.err) {\n      navigate(\"/error\", {\n        state: {\n          err: this.state.err\n        }\n      });\n    }\n\n    return React.createElement(React.Fragment, null, this.state.isLoading ? \"loading...\" : React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: styles.containerGrid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.centralContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.state.article.title), React.createElement(\"p\", {\n      className: styles.author,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"by \", this.state.article.author)), React.createElement(\"div\", {\n      className: styles.bodyContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: styles.bodyText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, this.state.article.body)), React.createElement(\"button\", {\n      onClick: () => {\n        this.props.currentUser !== null && this.props.currentUser !== undefined && this.props.currentUser !== \"\" ? this.setState(currState => {\n          return {\n            createCommentDisplaying: !currState.createCommentDisplaying\n          };\n        }) : alert(\"To vote on the latest news, log in or sign up!\");\n      },\n      className: styles.joinConvoButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, this.state.createCommentDisplaying ? \"Maybe later...\" : \"Join the conversation!\"), React.createElement(\"div\", {\n      className: styles.leftHandSideContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(VoteDisplayOnArticle, {\n      currentUser: this.props.currentUser,\n      article_id: this.state.article.article_id,\n      votes: this.state.votes,\n      voteOnArticleUpstream: this.voteOnArticleUpstream // refreshTicket={this.state.refreshTicket}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: styles.rightHandSideContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: styles.topic,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, this.state.article.topic), React.createElement(\"p\", {\n      className: styles.comments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      role: \"img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"\\uD83D\\uDCAC\"), ` ${this.state.article.comment_count + this.state.temporaryCommentIncrement} `), React.createElement(\"p\", {\n      className: styles.created_at,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(DateFormat, {\n      created_at: this.state.article.created_at,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }))), this.state.createCommentDisplaying && React.createElement(CreateComment, {\n      currentUser: this.props.currentUser,\n      newCommentInput: this.state.newCommentInput,\n      sneakyUpwardNewCommentInput: this.sneakyUpwardNewCommentInput,\n      submitNewComment: this.submitNewComment,\n      refreshTicket: this.state.refreshTicket,\n      upwardEmptyCheckReset: this.state.upwardEmptyCheckReset,\n      userSubmitsEmpty: this.state.userSubmitsEmpty,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, this.state.comments.map(comment => React.createElement(CommentGrid, {\n      comment: comment,\n      currentUser: this.props.currentUser,\n      article_id: this.state.article.article_id,\n      sneakyUpwardDelete: this.sneakyUpwardDelete,\n      sneakyUpwardAmbicrement: this.sneakyUpwardAmbicrement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default SingleArticle;","map":{"version":3,"sources":["/home/heihachu/fe-news/src/SingleArticle.jsx"],"names":["React","styles","Router","Link","navigate","voteOnArticle","postNewComment","VoteDisplayOnArticle","fetchArticleByID","fetchArticleWithComments","CommentGrid","CreateComment","DateFormat","SingleArticle","Component","state","createCommentDisplaying","newCommentInput","article","comments","isLoading","votes","userSubmitsEmpty","err","upwardEmptyCheckReset","setState","sneakyUpwardNewCommentInput","sneakyUpwardAmbicrement","crement","currState","temporaryCommentIncrement","sneakyUpwardDelete","comment_id","newCommentArray","filter","comment","sneakyUpwardChange","voteOnArticleUpstream","voteDirection","submitNewComment","event","preventDefault","props","currentUser","article_id","then","newlyComment","upToDateWithCommentCount","componentDidMount","render","containerGrid","centralContainer","title","author","bodyContainer","bodyText","body","undefined","alert","joinConvoButton","leftHandSideContainer","rightHandSideContainer","topic","comment_count","created_at","refreshTicket","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styles from \"./css/SingleArticle.module.css\";\nimport { Router, Link, navigate } from \"@reach/router\";\nimport { voteOnArticle, postNewComment } from \"./utils/patchUtils\";\nimport VoteDisplayOnArticle from \"./VoteDisplayOnArticle\";\nimport { fetchArticleByID, fetchArticleWithComments } from \"./utils/getUtils\";\nimport CommentGrid from \"./CommentGrid\";\nimport CreateComment from \"./CreateComment\";\nimport DateFormat from \"./DateFormat\";\n\nclass SingleArticle extends React.Component {\n  state = {\n    createCommentDisplaying: false,\n    newCommentInput: \"\",\n    article: null,\n    comments: null,\n    isLoading: true,\n    votes: 0,\n    // refreshTicket: 0,\n    // upToDateWithCommentCount: true,\n    // temporaryCommentIncrement: 0,\n    userSubmitsEmpty: false,\n    err: null\n  };\n\n  upwardEmptyCheckReset = () => {\n    this.setState({ userSubmitsEmpty: false });\n  };\n\n  sneakyUpwardNewCommentInput = newCommentInput => {\n    this.setState({ newCommentInput });\n  };\n\n  sneakyUpwardAmbicrement = crement => {\n    this.setState(currState => {\n      return {\n        temporaryCommentIncrement: currState.temporaryCommentIncrement + crement\n      };\n    });\n  };\n\n  sneakyUpwardDelete = comment_id => {\n    this.setState(currState => {\n      let newCommentArray = currState.comments.filter(\n        comment => comment.comment_id !== comment_id\n      );\n\n      return { comments: newCommentArray };\n    });\n  };\n\n  sneakyUpwardChange = (err, article, comments) => {\n    if (err) {\n      this.setState({ err });\n    } else\n      this.setState({\n        article,\n        comments,\n        isLoading: false,\n        votes: article.votes\n        // refreshTicket: Math.random(),\n        // temporaryCommentIncrement: 0,\n        // upToDateWithCommentCount: true\n      });\n  };\n\n  voteOnArticleUpstream = voteDirection => {\n    this.setState(currState => {\n      return { votes: currState.votes + voteDirection };\n    });\n  };\n\n  componentDidMount() {\n    fetchArticleWithComments(this.sneakyUpwardChange, this.props.article_id);\n  }\n\n  submitNewComment = event => {\n    event.preventDefault();\n\n    if (this.state.newCommentInput === \"\") {\n      this.setState({ userSubmitsEmpty: true });\n    } else\n      postNewComment(\n        this.props.currentUser,\n        this.state.article.article_id,\n        this.state.newCommentInput\n      ).then(newlyComment => {\n        this.setState(currState => {\n          return {\n            newCommentInput: \"\",\n            createCommentDisplaying: false,\n            comments: [newlyComment, ...currState.comments],\n            upToDateWithCommentCount: false,\n            temporaryCommentIncrement: currState.temporaryCommentIncrement + 1\n          };\n        });\n      });\n  };\n\n  render() {\n    if (this.state.err) {\n      navigate(\"/error\", { state: { err: this.state.err } });\n    }\n\n    return (\n      <>\n        {this.state.isLoading ? (\n          \"loading...\"\n        ) : (\n          <>\n            <div className={styles.containerGrid}>\n              <div className={styles.centralContainer}>\n                <p className={styles.title}>{this.state.article.title}</p>\n                <p className={styles.author}>by {this.state.article.author}</p>\n              </div>\n\n              <div className={styles.bodyContainer}>\n                <p className={styles.bodyText}>{this.state.article.body}</p>\n              </div>\n\n              <button\n                onClick={() => {\n                  this.props.currentUser !== null &&\n                  this.props.currentUser !== undefined &&\n                  this.props.currentUser !== \"\"\n                    ? this.setState(currState => {\n                        return {\n                          createCommentDisplaying: !currState.createCommentDisplaying\n                        };\n                      })\n                    : alert(\"To vote on the latest news, log in or sign up!\");\n                }}\n                className={styles.joinConvoButton}\n              >\n                {this.state.createCommentDisplaying\n                  ? \"Maybe later...\"\n                  : \"Join the conversation!\"}\n              </button>\n\n              <div className={styles.leftHandSideContainer}>\n                <VoteDisplayOnArticle\n                  currentUser={this.props.currentUser}\n                  article_id={this.state.article.article_id}\n                  votes={this.state.votes}\n                  voteOnArticleUpstream={this.voteOnArticleUpstream}\n                  // refreshTicket={this.state.refreshTicket}\n                />\n              </div>\n\n              <div className={styles.rightHandSideContainer}>\n                <p className={styles.topic}>{this.state.article.topic}</p>\n                <p className={styles.comments}>\n                  <span role=\"img\">💬</span>\n                  {` ${this.state.article.comment_count +\n                    this.state.temporaryCommentIncrement} `}\n                </p>\n\n                <p className={styles.created_at}>\n                  <DateFormat created_at={this.state.article.created_at} />\n                </p>\n\n                {/* <p className={styles.created_at}>{`${\n                  lookup[new Date(this.state.article.created_at).getMonth()]\n                } ${new Date(\n                  this.state.article.created_at\n                ).getDate()} ${new Date(\n                  this.state.article.created_at\n                ).getHours()}:${new Date(\n                  this.state.article.created_at\n                ).getMinutes()} (${new Date(\n                  this.state.article.created_at\n                ).getFullYear()})`}</p> */}\n              </div>\n              {this.state.createCommentDisplaying && (\n                <CreateComment\n                  currentUser={this.props.currentUser}\n                  newCommentInput={this.state.newCommentInput}\n                  sneakyUpwardNewCommentInput={this.sneakyUpwardNewCommentInput}\n                  submitNewComment={this.submitNewComment}\n                  refreshTicket={this.state.refreshTicket}\n                  upwardEmptyCheckReset={this.state.upwardEmptyCheckReset}\n                  userSubmitsEmpty={this.state.userSubmitsEmpty}\n                />\n              )}\n            </div>\n\n            <div>\n              {this.state.comments.map(comment => (\n                <CommentGrid\n                  comment={comment}\n                  currentUser={this.props.currentUser}\n                  article_id={this.state.article.article_id}\n                  sneakyUpwardDelete={this.sneakyUpwardDelete}\n                  sneakyUpwardAmbicrement={this.sneakyUpwardAmbicrement}\n                />\n              ))}\n            </div>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default SingleArticle;\n"]},"metadata":{},"sourceType":"module"}