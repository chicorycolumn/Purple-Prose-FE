{"ast":null,"code":"var _jsxFileName = \"/home/heihachu/fe-news/src/VoteDisplayOnArticle.jsx\";\nimport React, { Component } from \"react\";\nimport { voteOnArticle } from \"./utils/patchUtils\";\nimport styles from \"./css/ArticlePreview.module.css\";\nimport { queryUserVoteOnArticle } from \"./utils/getUtils\"; //The intention of all this is to check the actual number of votes an article has to display the user having voted new votecount.\n//It basically works, just that you don't see the visual feedback if you already have a downvote on sth, then refresh page (which sets voteBuffer to 0 instead of -1)\n//and so then yes the request is sent off fine, but you dont see the feedback. Should be resolvable by using jxn table that already exists to populate whether\n//up arrow should be red or blue kinda thing.\n\nclass VoteDisplayOnArticle extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      castedVote: 0,\n      error: false,\n      hasParentRefreshed: true\n    };\n\n    this.sneakyUpwardChange = article_votes_junction => {\n      console.log(`SUC: CV'll be ${article_votes_junction[0][\"inc_votes\"]}`);\n      this.setState({\n        castedVote: article_votes_junction[0][\"inc_votes\"]\n      });\n    };\n\n    this.handleVote = voteDirection => {\n      if (!(this.props.currentUser !== null && this.props.currentUser !== undefined && this.props.currentUser !== \"\")) {\n        alert(\"To vote on the latest news, log in or sign up!\");\n      } else {\n        const {\n          article_id,\n          currentUser\n        } = this.props; //If nullifying or de novo:\n\n        if (voteDirection !== this.state.castedVote) {\n          this.setState(currState => {\n            return {\n              castedVote: currState.castedVote + voteDirection,\n              error: false,\n              hasParentRefreshed: false\n            };\n          });\n        } // let newCastedVote = this.state.castedVote;\n        // if (newCastedVote < 1 && voteDirection === 1) {\n        //   newCastedVote++;\n        // } else if (newCastedVote > -1 && voteDirection === -1) {\n        //   newCastedVote--;\n        // }\n        // this.setState({ castedVote: newCastedVote });\n        //\n        // voteOnArticle(currentUser, article_id, voteDirection).then(\n        //   this.setState(currState => {\n        //     return {\n        //       error: true,\n        //       castedVote: currState.castedVote + (voteDirection === -1 ? 1 : -1),\n        //       hasParentRefreshed: false\n        //     };\n        //   })\n        // )\n\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"m- m- mount\");\n\n    if (this.props.currentUser) {\n      queryUserVoteOnArticle(this.sneakyUpwardChange, this.props.currentUser, this.props.article_id);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log(\"uh uh update\");\n\n    if (prevProps.refreshTicket !== this.props.refreshTicket) {\n      this.setState({\n        hasParentRefreshed: true\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"p\", {\n      className: styles.votes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: styles.voteEmoji,\n      onClick: () => {\n        if (this.state.castedVote !== 1) {\n          this.handleVote(1);\n        }\n      },\n      role: \"img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.castedVote.toString() === \"1\" ? \"▲\" : \"▵\"), React.createElement(\"p\", {\n      className: styles.voteCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, (this.props.votes || 0) + (this.state.hasParentRefreshed ? 0 : this.state.castedVote)), React.createElement(\"span\", {\n      className: styles.voteEmoji,\n      onClick: () => {\n        if (this.state.castedVote !== -1) {\n          this.handleVote(-1);\n        }\n      },\n      role: \"img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.state.castedVote.toString() === \"-1\" ? \"▼\" : \"▿\"));\n  }\n\n}\n\nexport default VoteDisplayOnArticle;","map":{"version":3,"sources":["/home/heihachu/fe-news/src/VoteDisplayOnArticle.jsx"],"names":["React","Component","voteOnArticle","styles","queryUserVoteOnArticle","VoteDisplayOnArticle","state","castedVote","error","hasParentRefreshed","sneakyUpwardChange","article_votes_junction","console","log","setState","handleVote","voteDirection","props","currentUser","undefined","alert","article_id","currState","componentDidMount","componentDidUpdate","prevProps","refreshTicket","render","votes","voteEmoji","toString","voteCount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,SAASC,sBAAT,QAAuC,kBAAvC,C,CAEA;AACA;AACA;AACA;;AAEA,MAAMC,oBAAN,SAAmCJ,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAC3CK,KAD2C,GACnC;AACNC,MAAAA,UAAU,EAAE,CADN;AAENC,MAAAA,KAAK,EAAE,KAFD;AAGNC,MAAAA,kBAAkB,EAAE;AAHd,KADmC;;AAAA,SAO3CC,kBAP2C,GAOtBC,sBAAsB,IAAI;AAC7CC,MAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBF,sBAAsB,CAAC,CAAD,CAAtB,CAA0B,WAA1B,CAAuC,EAApE;AACA,WAAKG,QAAL,CAAc;AAAEP,QAAAA,UAAU,EAAEI,sBAAsB,CAAC,CAAD,CAAtB,CAA0B,WAA1B;AAAd,OAAd;AACD,KAV0C;;AAAA,SA8B3CI,UA9B2C,GA8B9BC,aAAa,IAAI;AAC5B,UACE,EACE,KAAKC,KAAL,CAAWC,WAAX,KAA2B,IAA3B,IACA,KAAKD,KAAL,CAAWC,WAAX,KAA2BC,SAD3B,IAEA,KAAKF,KAAL,CAAWC,WAAX,KAA2B,EAH7B,CADF,EAME;AACAE,QAAAA,KAAK,CAAC,gDAAD,CAAL;AACD,OARD,MAQO;AACL,cAAM;AAAEC,UAAAA,UAAF;AAAcH,UAAAA;AAAd,YAA8B,KAAKD,KAAzC,CADK,CAEL;;AACA,YAAID,aAAa,KAAK,KAAKV,KAAL,CAAWC,UAAjC,EAA6C;AAC3C,eAAKO,QAAL,CAAcQ,SAAS,IAAI;AACzB,mBAAO;AACLf,cAAAA,UAAU,EAAEe,SAAS,CAACf,UAAV,GAAuBS,aAD9B;AAELR,cAAAA,KAAK,EAAE,KAFF;AAGLC,cAAAA,kBAAkB,EAAE;AAHf,aAAP;AAKD,WAND;AAOD,SAXI,CAaL;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;AACF,KAvE0C;AAAA;;AAY3Cc,EAAAA,iBAAiB,GAAG;AAClBX,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AACA,QAAI,KAAKI,KAAL,CAAWC,WAAf,EAA4B;AAC1Bd,MAAAA,sBAAsB,CACpB,KAAKM,kBADe,EAEpB,KAAKO,KAAL,CAAWC,WAFS,EAGpB,KAAKD,KAAL,CAAWI,UAHS,CAAtB;AAKD;AACF;;AAEDG,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5Bb,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AACA,QAAIY,SAAS,CAACC,aAAV,KAA4B,KAAKT,KAAL,CAAWS,aAA3C,EAA0D;AACxD,WAAKZ,QAAL,CAAc;AAAEL,QAAAA,kBAAkB,EAAE;AAAtB,OAAd;AACD;AACF;;AA6CDkB,EAAAA,MAAM,GAAG;AACP,WACE;AAAG,MAAA,SAAS,EAAExB,MAAM,CAACyB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAEzB,MAAM,CAAC0B,SADpB;AAEE,MAAA,OAAO,EAAE,MAAM;AACb,YAAI,KAAKvB,KAAL,CAAWC,UAAX,KAA0B,CAA9B,EAAiC;AAC/B,eAAKQ,UAAL,CAAgB,CAAhB;AACD;AACF,OANH;AAOE,MAAA,IAAI,EAAC,KAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASG,KAAKT,KAAL,CAAWC,UAAX,CAAsBuB,QAAtB,OAAqC,GAArC,GAA2C,GAA3C,GAAiD,GATpD,CADF,EAYE;AAAG,MAAA,SAAS,EAAE3B,MAAM,CAAC4B,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,CAAC,KAAKd,KAAL,CAAWW,KAAX,IAAoB,CAArB,KACE,KAAKtB,KAAL,CAAWG,kBAAX,GAAgC,CAAhC,GAAoC,KAAKH,KAAL,CAAWC,UADjD,CAFH,CAZF,EAiBE;AACE,MAAA,SAAS,EAAEJ,MAAM,CAAC0B,SADpB;AAEE,MAAA,OAAO,EAAE,MAAM;AACb,YAAI,KAAKvB,KAAL,CAAWC,UAAX,KAA0B,CAAC,CAA/B,EAAkC;AAChC,eAAKQ,UAAL,CAAgB,CAAC,CAAjB;AACD;AACF,OANH;AAOE,MAAA,IAAI,EAAC,KAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASG,KAAKT,KAAL,CAAWC,UAAX,CAAsBuB,QAAtB,OAAqC,IAArC,GAA4C,GAA5C,GAAkD,GATrD,CAjBF,CADF;AA+BD;;AAzG0C;;AA4G7C,eAAezB,oBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { voteOnArticle } from \"./utils/patchUtils\";\nimport styles from \"./css/ArticlePreview.module.css\";\nimport { queryUserVoteOnArticle } from \"./utils/getUtils\";\n\n//The intention of all this is to check the actual number of votes an article has to display the user having voted new votecount.\n//It basically works, just that you don't see the visual feedback if you already have a downvote on sth, then refresh page (which sets voteBuffer to 0 instead of -1)\n//and so then yes the request is sent off fine, but you dont see the feedback. Should be resolvable by using jxn table that already exists to populate whether\n//up arrow should be red or blue kinda thing.\n\nclass VoteDisplayOnArticle extends Component {\n  state = {\n    castedVote: 0,\n    error: false,\n    hasParentRefreshed: true\n  };\n\n  sneakyUpwardChange = article_votes_junction => {\n    console.log(`SUC: CV'll be ${article_votes_junction[0][\"inc_votes\"]}`);\n    this.setState({ castedVote: article_votes_junction[0][\"inc_votes\"] });\n  };\n\n  componentDidMount() {\n    console.log(\"m- m- mount\");\n    if (this.props.currentUser) {\n      queryUserVoteOnArticle(\n        this.sneakyUpwardChange,\n        this.props.currentUser,\n        this.props.article_id\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log(\"uh uh update\");\n    if (prevProps.refreshTicket !== this.props.refreshTicket) {\n      this.setState({ hasParentRefreshed: true });\n    }\n  }\n\n  handleVote = voteDirection => {\n    if (\n      !(\n        this.props.currentUser !== null &&\n        this.props.currentUser !== undefined &&\n        this.props.currentUser !== \"\"\n      )\n    ) {\n      alert(\"To vote on the latest news, log in or sign up!\");\n    } else {\n      const { article_id, currentUser } = this.props;\n      //If nullifying or de novo:\n      if (voteDirection !== this.state.castedVote) {\n        this.setState(currState => {\n          return {\n            castedVote: currState.castedVote + voteDirection,\n            error: false,\n            hasParentRefreshed: false\n          };\n        });\n      }\n\n      // let newCastedVote = this.state.castedVote;\n\n      // if (newCastedVote < 1 && voteDirection === 1) {\n      //   newCastedVote++;\n      // } else if (newCastedVote > -1 && voteDirection === -1) {\n      //   newCastedVote--;\n      // }\n      // this.setState({ castedVote: newCastedVote });\n      //\n      // voteOnArticle(currentUser, article_id, voteDirection).then(\n      //   this.setState(currState => {\n      //     return {\n      //       error: true,\n      //       castedVote: currState.castedVote + (voteDirection === -1 ? 1 : -1),\n      //       hasParentRefreshed: false\n      //     };\n      //   })\n      // )\n    }\n  };\n\n  render() {\n    return (\n      <p className={styles.votes}>\n        <span\n          className={styles.voteEmoji}\n          onClick={() => {\n            if (this.state.castedVote !== 1) {\n              this.handleVote(1);\n            }\n          }}\n          role=\"img\"\n        >\n          {this.state.castedVote.toString() === \"1\" ? \"▲\" : \"▵\"}\n        </span>\n        <p className={styles.voteCount}>\n          {/* {this.state.castedVote + (this.props.votes || 0)} */}\n          {(this.props.votes || 0) +\n            (this.state.hasParentRefreshed ? 0 : this.state.castedVote)}\n        </p>\n        <span\n          className={styles.voteEmoji}\n          onClick={() => {\n            if (this.state.castedVote !== -1) {\n              this.handleVote(-1);\n            }\n          }}\n          role=\"img\"\n        >\n          {this.state.castedVote.toString() === \"-1\" ? \"▼\" : \"▿\"}\n        </span>\n      </p>\n    );\n  }\n}\n\nexport default VoteDisplayOnArticle;\n"]},"metadata":{},"sourceType":"module"}