{"ast":null,"code":"var _jsxFileName = \"/home/heihachu/fe-news/src/CreateComment.jsx\";\nimport React from \"react\";\nimport styles from \"./css/SingleArticle.module.css\";\nimport { Router, Link, navigate } from \"@reach/router\";\nimport { voteOnArticle, postNewComment } from \"./utils/patchUtils\";\nimport VoteDisplayOnArticle from \"./VoteDisplayOnArticle\";\nimport { fetchArticleByID, fetchArticleWithComments } from \"./utils/getUtils\";\nimport CommentGrid from \"./CommentGrid\";\n\nclass CreateComment extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: false,\n      shallMakeInputBoxFlash: false\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.refreshTicket !== this.props.refreshTicket) {\n      this.setState({\n        isLoading: false\n      });\n    }\n\n    if (this.state.shallMakeInputBoxFlash) {\n      setTimeout(() => {\n        this.setState({\n          shallMakeInputBoxFlash: false\n        });\n      }, 3000);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: styles.newCommentOverbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.newCommentHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.boxInHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.props.currentUser && React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      className: styles.newCommentInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"posting as\"), React.createElement(\"p\", {\n      className: styles.usernameOnComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.props.currentUser))), React.createElement(\"button\", {\n      className: styles.newCommentSubmitButton,\n      onClick: e => {\n        if (this.props.newCommentInput === \"\") {\n          this.setState({\n            shallMakeInputBoxFlash: true\n          });\n        } else {\n          this.props.submitNewComment(e);\n          this.setState({\n            isLoading: true\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.state.isLoading ? \"submitting...\" : \"Say it!\")), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      required: true,\n      rows: \"3\",\n      cols: \"80\",\n      className: `${styles.newCommentInputField} ${this.state.shallMakeInputBoxFlash && styles.flashingNewCommentInputField}`,\n      onChange: e => {\n        this.props.sneakyUpwardNewCommentInput(e.target.value);\n      },\n      value: this.props.newCommentInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default CreateComment;","map":{"version":3,"sources":["/home/heihachu/fe-news/src/CreateComment.jsx"],"names":["React","styles","Router","Link","navigate","voteOnArticle","postNewComment","VoteDisplayOnArticle","fetchArticleByID","fetchArticleWithComments","CommentGrid","CreateComment","Component","state","isLoading","shallMakeInputBoxFlash","componentDidUpdate","prevProps","refreshTicket","props","setState","setTimeout","render","newCommentOverbox","newCommentHeader","boxInHeader","currentUser","newCommentInfo","usernameOnComment","newCommentSubmitButton","e","newCommentInput","submitNewComment","newCommentInputField","flashingNewCommentInputField","sneakyUpwardNewCommentInput","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styles from \"./css/SingleArticle.module.css\";\nimport { Router, Link, navigate } from \"@reach/router\";\nimport { voteOnArticle, postNewComment } from \"./utils/patchUtils\";\nimport VoteDisplayOnArticle from \"./VoteDisplayOnArticle\";\nimport { fetchArticleByID, fetchArticleWithComments } from \"./utils/getUtils\";\nimport CommentGrid from \"./CommentGrid\";\n\nclass CreateComment extends React.Component {\n  state = { isLoading: false, shallMakeInputBoxFlash: false };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.refreshTicket !== this.props.refreshTicket) {\n      this.setState({ isLoading: false });\n    }\n\n    if (this.state.shallMakeInputBoxFlash) {\n      setTimeout(() => {\n        this.setState({ shallMakeInputBoxFlash: false });\n      }, 3000);\n    }\n  }\n\n  render() {\n    return (\n      <div className={styles.newCommentOverbox}>\n        <div className={styles.newCommentHeader}>\n          <div className={styles.boxInHeader}>\n            {this.props.currentUser && (\n              <>\n                <p className={styles.newCommentInfo}>posting as</p>\n\n                <p className={styles.usernameOnComment}>\n                  {this.props.currentUser}\n                </p>\n              </>\n            )}\n          </div>\n\n          <button\n            className={styles.newCommentSubmitButton}\n            onClick={e => {\n              if (this.props.newCommentInput === \"\") {\n                this.setState({ shallMakeInputBoxFlash: true });\n              } else {\n                this.props.submitNewComment(e);\n                this.setState({ isLoading: true });\n              }\n            }}\n          >\n            {this.state.isLoading ? \"submitting...\" : \"Say it!\"}\n          </button>\n        </div>\n        <form>\n          <textarea\n            required\n            rows=\"3\"\n            cols=\"80\"\n            className={`${styles.newCommentInputField} ${this.state\n              .shallMakeInputBoxFlash && styles.flashingNewCommentInputField}`}\n            onChange={e => {\n              this.props.sneakyUpwardNewCommentInput(e.target.value);\n            }}\n            value={this.props.newCommentInput}\n          ></textarea>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default CreateComment;\n"]},"metadata":{},"sourceType":"module"}