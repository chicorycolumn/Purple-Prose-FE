{"ast":null,"code":"import React from \"react\";\nimport styles from \"./css/SingleArticle.module.css\";\nimport { Router, Link, navigate } from \"@reach/router\";\nimport { voteOnArticle, postNewComment } from \"./utils/patchUtils\";\nimport VoteDisplayOnArticle from \"./VoteDisplayOnArticle\";\nimport { fetchArticleByID, fetchArticleWithComments } from \"./utils/getUtils\";\nimport CommentGrid from \"./CommentGrid\";\nimport CreateComment from \"./CreateComment\";\n\nclass SingleArticle extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      createCommentDisplaying: false,\n      newCommentInput: \"\",\n      article: null,\n      comments: null,\n      isLoading: true,\n      refreshTicket: 0,\n      upToDateWithCommentCount: true,\n      temporaryCommentIncrement: 0,\n      userSubmitsEmpty: false,\n      err: null\n    };\n\n    this.sneakyUpwardChange = (err, article, comments) => {\n      if (err) {\n        this.setState({\n          err\n        });\n      } else this.setState({\n        article,\n        comments,\n        isLoading: false,\n        refreshTicket: Math.random(),\n        temporaryCommentIncrement: 0,\n        upToDateWithCommentCount: true\n      });\n    };\n\n    this.upwardEmptyCheckReset = () => {\n      this.setState({\n        userSubmitsEmpty: false\n      });\n    };\n\n    this.sneakyUpwardNewCommentInput = newCommentInput => {\n      this.setState({\n        newCommentInput\n      });\n    };\n\n    this.sneakyUpwardAmbicrement = crement => {\n      this.setState(currState => {\n        return {\n          temporaryCommentIncrement: currState.temporaryCommentIncrement + crement\n        };\n      });\n    };\n\n    this.sneakyUpwardDelete = comment_id => {\n      this.setState(currState => {\n        let newCommentArray = currState.comments.filter(comment => comment.comment_id !== comment_id);\n        return {\n          comments: newCommentArray\n        };\n      });\n    };\n\n    this.submitNewComment = event => {\n      event.preventDefault();\n\n      if (this.state.newCommentInput === \"\") {\n        this.setState({\n          userSubmitsEmpty: true\n        });\n      } else postNewComment(this.props.currentUser, this.state.article.article_id, this.state.newCommentInput).then(newlyComment => {\n        this.setState(currState => {\n          return {\n            newCommentInput: \"\",\n            createCommentDisplaying: false,\n            comments: [newlyComment, ...currState.comments],\n            upToDateWithCommentCount: false,\n            temporaryCommentIncrement: currState.temporaryCommentIncrement + 1\n          };\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetchArticleWithComments(this.sneakyUpwardChange, this.props.article_id); // .catch(err => {\n    //   console.log(\"***************\");\n    //   console.log(err);\n    //   this.setState({\n    //     err\n    //   });\n    // });\n  }\n\n  render() {\n    if (this.state.err) {\n      navigate(\"/error\");\n    }\n\n    const lookup = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]; // const {\n    //   title,\n    //   author,\n    //   topic,\n    //   created_at,\n    //   article_id,\n    //   votes\n    // } = this.state.article;\n    // const year = new Date(created_at).getFullYear();\n    // const month = new Date(created_at).getMonth();\n    // const day = new Date(created_at).getDate();\n    // const hour = new Date(created_at).getHours();\n    // const minute = new Date(created_at).getMinutes();\n    // const formattedDate = `${lookup[month]} ${day} ${hour}:${minute} (${year})`;\n\n    return;\n    React.createElement(React.Fragment, null, \"hi\");\n  }\n\n}\n\nexport default SingleArticle;","map":{"version":3,"sources":["/home/heihachu/fe-news/src/SingleArticle.jsx"],"names":["React","styles","Router","Link","navigate","voteOnArticle","postNewComment","VoteDisplayOnArticle","fetchArticleByID","fetchArticleWithComments","CommentGrid","CreateComment","SingleArticle","Component","state","createCommentDisplaying","newCommentInput","article","comments","isLoading","refreshTicket","upToDateWithCommentCount","temporaryCommentIncrement","userSubmitsEmpty","err","sneakyUpwardChange","setState","Math","random","upwardEmptyCheckReset","sneakyUpwardNewCommentInput","sneakyUpwardAmbicrement","crement","currState","sneakyUpwardDelete","comment_id","newCommentArray","filter","comment","submitNewComment","event","preventDefault","props","currentUser","article_id","then","newlyComment","componentDidMount","render","lookup"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styles from \"./css/SingleArticle.module.css\";\nimport { Router, Link, navigate } from \"@reach/router\";\nimport { voteOnArticle, postNewComment } from \"./utils/patchUtils\";\nimport VoteDisplayOnArticle from \"./VoteDisplayOnArticle\";\nimport { fetchArticleByID, fetchArticleWithComments } from \"./utils/getUtils\";\nimport CommentGrid from \"./CommentGrid\";\nimport CreateComment from \"./CreateComment\";\n\nclass SingleArticle extends React.Component {\n  state = {\n    createCommentDisplaying: false,\n    newCommentInput: \"\",\n    article: null,\n    comments: null,\n    isLoading: true,\n    refreshTicket: 0,\n    upToDateWithCommentCount: true,\n    temporaryCommentIncrement: 0,\n    userSubmitsEmpty: false,\n    err: null\n  };\n\n  sneakyUpwardChange = (err, article, comments) => {\n    if (err) {\n      this.setState({ err });\n    } else\n      this.setState({\n        article,\n        comments,\n        isLoading: false,\n        refreshTicket: Math.random(),\n        temporaryCommentIncrement: 0,\n        upToDateWithCommentCount: true\n      });\n  };\n\n  upwardEmptyCheckReset = () => {\n    this.setState({ userSubmitsEmpty: false });\n  };\n\n  sneakyUpwardNewCommentInput = newCommentInput => {\n    this.setState({ newCommentInput });\n  };\n\n  sneakyUpwardAmbicrement = crement => {\n    this.setState(currState => {\n      return {\n        temporaryCommentIncrement: currState.temporaryCommentIncrement + crement\n      };\n    });\n  };\n\n  sneakyUpwardDelete = comment_id => {\n    this.setState(currState => {\n      let newCommentArray = currState.comments.filter(\n        comment => comment.comment_id !== comment_id\n      );\n\n      return { comments: newCommentArray };\n    });\n  };\n\n  componentDidMount() {\n    fetchArticleWithComments(this.sneakyUpwardChange, this.props.article_id);\n    // .catch(err => {\n    //   console.log(\"***************\");\n    //   console.log(err);\n    //   this.setState({\n    //     err\n    //   });\n    // });\n  }\n\n  submitNewComment = event => {\n    event.preventDefault();\n\n    if (this.state.newCommentInput === \"\") {\n      this.setState({ userSubmitsEmpty: true });\n    } else\n      postNewComment(\n        this.props.currentUser,\n        this.state.article.article_id,\n        this.state.newCommentInput\n      ).then(newlyComment => {\n        this.setState(currState => {\n          return {\n            newCommentInput: \"\",\n            createCommentDisplaying: false,\n            comments: [newlyComment, ...currState.comments],\n            upToDateWithCommentCount: false,\n            temporaryCommentIncrement: currState.temporaryCommentIncrement + 1\n          };\n        });\n      });\n  };\n\n  render() {\n    if (this.state.err) {\n      navigate(\"/error\");\n    }\n\n    const lookup = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ];\n    // const {\n    //   title,\n    //   author,\n    //   topic,\n    //   created_at,\n    //   article_id,\n    //   votes\n    // } = this.state.article;\n    // const year = new Date(created_at).getFullYear();\n    // const month = new Date(created_at).getMonth();\n    // const day = new Date(created_at).getDate();\n    // const hour = new Date(created_at).getHours();\n    // const minute = new Date(created_at).getMinutes();\n    // const formattedDate = `${lookup[month]} ${day} ${hour}:${minute} (${year})`;\n    return;\n    <>hi</>;\n  }\n}\n\nexport default SingleArticle;\n"]},"metadata":{},"sourceType":"module"}