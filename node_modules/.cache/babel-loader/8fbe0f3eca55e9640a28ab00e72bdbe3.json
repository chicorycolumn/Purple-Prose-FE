{"ast":null,"code":"import React, { Component } from \"react\";\nimport { voteOnComment } from \"./utils/patchUtils\";\nimport styles from \"./css/CommentGrid.module.css\"; //The intention of all this is to check the actual number of votes an article has to display the user having voted new votecount.\n//It basically works, just that you don't see the visual feedback if you already have a downvote on sth, then refresh page (which sets castedVote to 0 instead of -1)\n//and so then yes the request is sent off fine, but you dont see the feedback. Should be resolvable by using jxn table that already exists to populate whether\n//up arrow should be red or blue kinda thing.\n\nclass VoteDisplayOnComment extends Component {// state = { castedVote: 0 };\n  // handleVote = voteDirection => {\n  //   if (\n  //     this.props.currentUser !== null &&\n  //     this.props.currentUser !== undefined &&\n  //     this.props.currentUser !== \"\"\n  //   ) {\n  //     voteOnComment(\n  //       this.props.currentUser,\n  //       this.props.article_id,\n  //       voteDirection\n  //     );\n  //     let newCastedVote = this.state.castedVote;\n  //     // console.log(\"***\", this.state.castedVote, newCastedVote, \"***\");\n  //     if (newCastedVote < 1 && voteDirection === 1) {\n  //       // console.log(this.state.castedVote, newCastedVote);\n  //       // console.log(\"gonna plus\");\n  //       newCastedVote++;\n  //       // console.log(this.state.castedVote, newCastedVote);\n  //     } else if (newCastedVote > -1 && voteDirection === -1) {\n  //       // console.log(this.state.castedVote, newCastedVote);\n  //       // console.log(\"gonna minus\");\n  //       newCastedVote--;\n  //       // console.log(this.state.castedVote, newCastedVote);\n  //     }\n  //     this.setState({ castedVote: newCastedVote });\n  //   } else {\n  //     alert(\"To vote on the latest news, log in or sign up!\");\n  //   }\n  // };\n  // render() {\n  //   return (\n  //     <p className={styles.votes}>\n  //       <span\n  //         onClick={() => {\n  //           this.handleVote(1);\n  //         }}\n  //         role=\"img\"\n  //       >\n  //         ⬆️\n  //       </span>\n  //       <p className={styles.voteCount}>\n  //         {this.state.castedVote + (this.props.votes || 0)}\n  //       </p>\n  //       <span\n  //         onClick={() => {\n  //           this.handleVote(-1);\n  //         }}\n  //         role=\"img\"\n  //       >\n  //         ⬇️\n  //       </span>\n  //     </p>\n  //   );\n  // }\n}\n\nexport default VoteDisplayOnComment;","map":{"version":3,"sources":["/home/heihachu/fe-news/src/VoteDisplayOnComment.jsx"],"names":["React","Component","voteOnComment","styles","VoteDisplayOnComment"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,MAAP,MAAmB,8BAAnB,C,CAEA;AACA;AACA;AACA;;AAEA,MAAMC,oBAAN,SAAmCH,SAAnC,CAA6C,CAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvD2C;;AA0D7C,eAAeG,oBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { voteOnComment } from \"./utils/patchUtils\";\nimport styles from \"./css/CommentGrid.module.css\";\n\n//The intention of all this is to check the actual number of votes an article has to display the user having voted new votecount.\n//It basically works, just that you don't see the visual feedback if you already have a downvote on sth, then refresh page (which sets castedVote to 0 instead of -1)\n//and so then yes the request is sent off fine, but you dont see the feedback. Should be resolvable by using jxn table that already exists to populate whether\n//up arrow should be red or blue kinda thing.\n\nclass VoteDisplayOnComment extends Component {\n  // state = { castedVote: 0 };\n  // handleVote = voteDirection => {\n  //   if (\n  //     this.props.currentUser !== null &&\n  //     this.props.currentUser !== undefined &&\n  //     this.props.currentUser !== \"\"\n  //   ) {\n  //     voteOnComment(\n  //       this.props.currentUser,\n  //       this.props.article_id,\n  //       voteDirection\n  //     );\n  //     let newCastedVote = this.state.castedVote;\n  //     // console.log(\"***\", this.state.castedVote, newCastedVote, \"***\");\n  //     if (newCastedVote < 1 && voteDirection === 1) {\n  //       // console.log(this.state.castedVote, newCastedVote);\n  //       // console.log(\"gonna plus\");\n  //       newCastedVote++;\n  //       // console.log(this.state.castedVote, newCastedVote);\n  //     } else if (newCastedVote > -1 && voteDirection === -1) {\n  //       // console.log(this.state.castedVote, newCastedVote);\n  //       // console.log(\"gonna minus\");\n  //       newCastedVote--;\n  //       // console.log(this.state.castedVote, newCastedVote);\n  //     }\n  //     this.setState({ castedVote: newCastedVote });\n  //   } else {\n  //     alert(\"To vote on the latest news, log in or sign up!\");\n  //   }\n  // };\n  // render() {\n  //   return (\n  //     <p className={styles.votes}>\n  //       <span\n  //         onClick={() => {\n  //           this.handleVote(1);\n  //         }}\n  //         role=\"img\"\n  //       >\n  //         ⬆️\n  //       </span>\n  //       <p className={styles.voteCount}>\n  //         {this.state.castedVote + (this.props.votes || 0)}\n  //       </p>\n  //       <span\n  //         onClick={() => {\n  //           this.handleVote(-1);\n  //         }}\n  //         role=\"img\"\n  //       >\n  //         ⬇️\n  //       </span>\n  //     </p>\n  //   );\n  // }\n}\n\nexport default VoteDisplayOnComment;\n"]},"metadata":{},"sourceType":"module"}