{"ast":null,"code":"var _jsxFileName = \"/home/heihachu/fe-news/src/VoteDisplayOnArticle.jsx\";\nimport React, { Component } from \"react\";\nimport { voteOnArticle } from \"./utils/patchUtils\";\nimport styles from \"./css/ArticlePreview.module.css\";\nimport { queryUserVoteOnArticle } from \"./utils/getUtils\"; //The intention of all this is to check the actual number of votes an article has to display the user having voted new votecount.\n//It basically works, just that you don't see the visual feedback if you already have a downvote on sth, then refresh page (which sets voteBuffer to 0 instead of -1)\n//and so then yes the request is sent off fine, but you dont see the feedback. Should be resolvable by using jxn table that already exists to populate whether\n//up arrow should be red or blue kinda thing.\n\nclass VoteDisplayOnArticle extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      castedVote: 0,\n      error: false,\n      hasParentRefreshed: true\n    };\n\n    this.sneakyUpwardChange = article_votes_junction => {\n      this.setState({\n        castedVote: article_votes_junction[0][\"inc_votes\"]\n      });\n    };\n\n    this.handleVote = voteDirection => {\n      // if (\n      //   this.props.currentUser !== null &&\n      //   this.props.currentUser !== undefined &&\n      //   this.props.currentUser !== \"\"\n      // ) {\n      const {\n        article_id,\n        currentUser\n      } = this.props; // //Undoing the invalid double-vote the user just gave.\n      // voteOnArticle(currentUser, article_id, voteDirection).catch(err => {\n      //   console.log(`in catch and VB: ${this.state.voteBuffer}`);\n      //   this.setState(currState => {\n      //     return {\n      //       error: true,\n      //       voteBuffer: currState.voteBuffer + (voteDirection === -1 ? 1 : -1),\n      //       hasParentRefreshed: false\n      //     };\n      //   });\n      // });\n      //If nullifying a previous vote:\n\n      if (voteDirection === -1 && this.state.voteBuffer === 1 || voteDirection === 1 && this.state.voteBuffer === -1) {\n        console.log(`in NULL PREV and VB: ${this.state.voteBuffer}`);\n        this.setState(currState => {\n          return {\n            voteBuffer: 0,\n            // voteBuffer: currState.voteBuffer + voteDirection,\n            hasParentRefreshed: false\n          };\n        });\n      } //If voting de novo:\n      else if (this.state.castedVote !== voteDirection) {\n          this.setState(currState => {\n            return {\n              castedVote: currState.castedVote + voteDirection,\n              error: false,\n              hasParentRefreshed: false\n            };\n          });\n        } // let newCastedVote = this.state.voteBuffer;\n      // if (newCastedVote < 1 && voteDirection === 1) {\n      //   newCastedVote++;\n      // } else if (newCastedVote > -1 && voteDirection === -1) {\n      //   newCastedVote--;\n      // }\n      // this.setState({ voteBuffer: newCastedVote });\n      // } else {\n      //   alert(\"To vote on the latest news, log in or sign up!\");\n      // }\n\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.currentUser) {\n      queryUserVoteOnArticle(this.sneakyUpwardChange, this.props.currentUser, this.props.article_id);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.refreshTicket !== this.props.refreshTicket) {\n      this.setState({\n        hasParentRefreshed: true\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"p\", {\n      className: styles.votes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: styles.voteEmoji,\n      onClick: () => {\n        if (this.state.castedVote !== 1) {\n          this.handleVote(1);\n        }\n      },\n      role: \"img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.state.castedVote === 1 ? \"▲\" : \"▵\"), React.createElement(\"p\", {\n      className: styles.voteCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, (this.props.votes || 0) + (this.state.hasParentRefreshed ? 0 : this.state.voteBuffer)), React.createElement(\"span\", {\n      className: styles.voteEmoji,\n      onClick: () => {\n        this.handleVote(-1);\n      },\n      role: \"img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, this.state.voteBuffer.toString() === \"-1\" ? \"▼\" : \"▿\"));\n  }\n\n}\n\nexport default VoteDisplayOnArticle;","map":{"version":3,"sources":["/home/heihachu/fe-news/src/VoteDisplayOnArticle.jsx"],"names":["React","Component","voteOnArticle","styles","queryUserVoteOnArticle","VoteDisplayOnArticle","state","castedVote","error","hasParentRefreshed","sneakyUpwardChange","article_votes_junction","setState","handleVote","voteDirection","article_id","currentUser","props","voteBuffer","console","log","currState","componentDidMount","componentDidUpdate","prevProps","refreshTicket","render","votes","voteEmoji","voteCount","toString"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { voteOnArticle } from \"./utils/patchUtils\";\nimport styles from \"./css/ArticlePreview.module.css\";\nimport { queryUserVoteOnArticle } from \"./utils/getUtils\";\n\n//The intention of all this is to check the actual number of votes an article has to display the user having voted new votecount.\n//It basically works, just that you don't see the visual feedback if you already have a downvote on sth, then refresh page (which sets voteBuffer to 0 instead of -1)\n//and so then yes the request is sent off fine, but you dont see the feedback. Should be resolvable by using jxn table that already exists to populate whether\n//up arrow should be red or blue kinda thing.\n\nclass VoteDisplayOnArticle extends Component {\n  state = {\n    castedVote: 0,\n    error: false,\n    hasParentRefreshed: true\n  };\n\n  sneakyUpwardChange = article_votes_junction => {\n    this.setState({ castedVote: article_votes_junction[0][\"inc_votes\"] });\n  };\n\n  componentDidMount() {\n    if (this.props.currentUser) {\n      queryUserVoteOnArticle(\n        this.sneakyUpwardChange,\n        this.props.currentUser,\n        this.props.article_id\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.refreshTicket !== this.props.refreshTicket) {\n      this.setState({ hasParentRefreshed: true });\n    }\n  }\n\n  handleVote = voteDirection => {\n    // if (\n    //   this.props.currentUser !== null &&\n    //   this.props.currentUser !== undefined &&\n    //   this.props.currentUser !== \"\"\n    // ) {\n    const { article_id, currentUser } = this.props;\n\n    // //Undoing the invalid double-vote the user just gave.\n    // voteOnArticle(currentUser, article_id, voteDirection).catch(err => {\n    //   console.log(`in catch and VB: ${this.state.voteBuffer}`);\n    //   this.setState(currState => {\n    //     return {\n    //       error: true,\n    //       voteBuffer: currState.voteBuffer + (voteDirection === -1 ? 1 : -1),\n    //       hasParentRefreshed: false\n    //     };\n    //   });\n    // });\n\n    //If nullifying a previous vote:\n    if (\n      (voteDirection === -1 && this.state.voteBuffer === 1) ||\n      (voteDirection === 1 && this.state.voteBuffer === -1)\n    ) {\n      console.log(`in NULL PREV and VB: ${this.state.voteBuffer}`);\n      this.setState(currState => {\n        return {\n          voteBuffer: 0,\n          // voteBuffer: currState.voteBuffer + voteDirection,\n          hasParentRefreshed: false\n        };\n      });\n    }\n    //If voting de novo:\n    else if (this.state.castedVote !== voteDirection) {\n      this.setState(currState => {\n        return {\n          castedVote: currState.castedVote + voteDirection,\n          error: false,\n          hasParentRefreshed: false\n        };\n      });\n    }\n    // let newCastedVote = this.state.voteBuffer;\n\n    // if (newCastedVote < 1 && voteDirection === 1) {\n    //   newCastedVote++;\n    // } else if (newCastedVote > -1 && voteDirection === -1) {\n    //   newCastedVote--;\n    // }\n    // this.setState({ voteBuffer: newCastedVote });\n    // } else {\n    //   alert(\"To vote on the latest news, log in or sign up!\");\n    // }\n  };\n\n  render() {\n    return (\n      <p className={styles.votes}>\n        <span\n          className={styles.voteEmoji}\n          onClick={() => {\n            if (this.state.castedVote !== 1) {\n              this.handleVote(1);\n            }\n          }}\n          role=\"img\"\n        >\n          {this.state.castedVote === 1 ? \"▲\" : \"▵\"}\n        </span>\n        <p className={styles.voteCount}>\n          {/* {this.state.voteBuffer + (this.props.votes || 0)} */}\n          {(this.props.votes || 0) +\n            (this.state.hasParentRefreshed ? 0 : this.state.voteBuffer)}\n        </p>\n        <span\n          className={styles.voteEmoji}\n          onClick={() => {\n            this.handleVote(-1);\n          }}\n          role=\"img\"\n        >\n          {this.state.voteBuffer.toString() === \"-1\" ? \"▼\" : \"▿\"}\n        </span>\n      </p>\n    );\n  }\n}\n\nexport default VoteDisplayOnArticle;\n"]},"metadata":{},"sourceType":"module"}