{"ast":null,"code":"import React from \"react\";\nimport axios from \"axios\";\nconst baseUrl = \"https://nc-news-c-matus.herokuapp.com/api\";\nexport const fetchArticles = (cb, qObj) => {\n  let qString = \"\";\n\n  if (qObj && Object.keys(qObj).length) {\n    let qStringArray = [];\n    Object.keys(qObj).forEach(qKey => qStringArray.push(`${qKey}=${qObj[qKey]}`));\n    qString = \"?\" + qStringArray.join(\"&\");\n  }\n\n  axios.get(`${baseUrl}/articles/${qString}`).then(res => res.data).then(data => {\n    cb(data[\"articles\"]);\n  });\n};\nexport const getArticleCountsByTopic = (cb, topicsArray) => {\n  const promisesArr = [];\n  topicsArray.forEach(topic => promisesArr.push(axios.get(`${baseUrl}/articles?topic=${topic}`).then(res => res.data)));\n  Promise.all(promisesArr).then(resArr => {\n    cb(resArr);\n  });\n};\nexport const fetchUsers = cb => {\n  axios.get(`${baseUrl}/users`).then(res => res.data).then(data => {\n    cb(data[\"users\"]);\n  });\n};\nexport const fetchTopics = cb => {\n  cb([// { description: \"Please be civil.\", slug: \"politics\" },\n  // { description: \"For all pet related questions\", slug: \"pets\" },\n  // { description: \"Star crossed lovers\", slug: \"astronomy\" },\n  // { description: \"Live. Laugh. Lift.\", slug: \"fitness\" },\n  // { description: \"stitch me up, scotty\", slug: \"embroidery\" },\n  {\n    description: \"Code is love, code is life\",\n    slug: \"coding\"\n  }, {\n    description: \"FOOTIE!\",\n    slug: \"football\"\n  }, {\n    description: \"Hey good looking, what you got cooking?\",\n    slug: \"cooking\"\n  }]); // axios\n  //   .get(`${baseUrl}/topics`)\n  //   .then(res => res.data)\n  //   .then(data => {\n  //     cb(data[\"topics\"]);\n  //   });\n};","map":{"version":3,"sources":["/home/heihachu/fe-news/src/utils/getUtils.js"],"names":["React","axios","baseUrl","fetchArticles","cb","qObj","qString","Object","keys","length","qStringArray","forEach","qKey","push","join","get","then","res","data","getArticleCountsByTopic","topicsArray","promisesArr","topic","Promise","all","resArr","fetchUsers","fetchTopics","description","slug"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,2CAAhB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,EAAD,EAAKC,IAAL,KAAc;AACzC,MAAIC,OAAO,GAAG,EAAd;;AAEA,MAAID,IAAI,IAAIE,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBI,MAA9B,EAAsC;AACpC,QAAIC,YAAY,GAAG,EAAnB;AACAH,IAAAA,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBM,OAAlB,CAA0BC,IAAI,IAC5BF,YAAY,CAACG,IAAb,CAAmB,GAAED,IAAK,IAAGP,IAAI,CAACO,IAAD,CAAO,EAAxC,CADF;AAGAN,IAAAA,OAAO,GAAG,MAAMI,YAAY,CAACI,IAAb,CAAkB,GAAlB,CAAhB;AACD;;AACDb,EAAAA,KAAK,CACFc,GADH,CACQ,GAAEb,OAAQ,aAAYI,OAAQ,EADtC,EAEGU,IAFH,CAEQC,GAAG,IAAIA,GAAG,CAACC,IAFnB,EAGGF,IAHH,CAGQE,IAAI,IAAI;AACZd,IAAAA,EAAE,CAACc,IAAI,CAAC,UAAD,CAAL,CAAF;AACD,GALH;AAMD,CAhBM;AAkBP,OAAO,MAAMC,uBAAuB,GAAG,CAACf,EAAD,EAAKgB,WAAL,KAAqB;AAC1D,QAAMC,WAAW,GAAG,EAApB;AAEAD,EAAAA,WAAW,CAACT,OAAZ,CAAoBW,KAAK,IACvBD,WAAW,CAACR,IAAZ,CACEZ,KAAK,CAACc,GAAN,CAAW,GAAEb,OAAQ,mBAAkBoB,KAAM,EAA7C,EAAgDN,IAAhD,CAAqDC,GAAG,IAAIA,GAAG,CAACC,IAAhE,CADF,CADF;AAMAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ,EAAyBL,IAAzB,CAA8BS,MAAM,IAAI;AACtCrB,IAAAA,EAAE,CAACqB,MAAD,CAAF;AACD,GAFD;AAGD,CAZM;AAcP,OAAO,MAAMC,UAAU,GAAGtB,EAAE,IAAI;AAC9BH,EAAAA,KAAK,CACFc,GADH,CACQ,GAAEb,OAAQ,QADlB,EAEGc,IAFH,CAEQC,GAAG,IAAIA,GAAG,CAACC,IAFnB,EAGGF,IAHH,CAGQE,IAAI,IAAI;AACZd,IAAAA,EAAE,CAACc,IAAI,CAAC,OAAD,CAAL,CAAF;AACD,GALH;AAMD,CAPM;AASP,OAAO,MAAMS,WAAW,GAAGvB,EAAE,IAAI;AAC/BA,EAAAA,EAAE,CAAC,CACD;AACA;AACA;AACA;AACA;AACA;AAAEwB,IAAAA,WAAW,EAAE,4BAAf;AAA6CC,IAAAA,IAAI,EAAE;AAAnD,GANC,EAOD;AAAED,IAAAA,WAAW,EAAE,SAAf;AAA0BC,IAAAA,IAAI,EAAE;AAAhC,GAPC,EAQD;AAAED,IAAAA,WAAW,EAAE,yCAAf;AAA0DC,IAAAA,IAAI,EAAE;AAAhE,GARC,CAAD,CAAF,CAD+B,CAW/B;AACA;AACA;AACA;AACA;AACA;AACD,CAjBM","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nconst baseUrl = \"https://nc-news-c-matus.herokuapp.com/api\";\n\nexport const fetchArticles = (cb, qObj) => {\n  let qString = \"\";\n\n  if (qObj && Object.keys(qObj).length) {\n    let qStringArray = [];\n    Object.keys(qObj).forEach(qKey =>\n      qStringArray.push(`${qKey}=${qObj[qKey]}`)\n    );\n    qString = \"?\" + qStringArray.join(\"&\");\n  }\n  axios\n    .get(`${baseUrl}/articles/${qString}`)\n    .then(res => res.data)\n    .then(data => {\n      cb(data[\"articles\"]);\n    });\n};\n\nexport const getArticleCountsByTopic = (cb, topicsArray) => {\n  const promisesArr = [];\n\n  topicsArray.forEach(topic =>\n    promisesArr.push(\n      axios.get(`${baseUrl}/articles?topic=${topic}`).then(res => res.data)\n    )\n  );\n\n  Promise.all(promisesArr).then(resArr => {\n    cb(resArr);\n  });\n};\n\nexport const fetchUsers = cb => {\n  axios\n    .get(`${baseUrl}/users`)\n    .then(res => res.data)\n    .then(data => {\n      cb(data[\"users\"]);\n    });\n};\n\nexport const fetchTopics = cb => {\n  cb([\n    // { description: \"Please be civil.\", slug: \"politics\" },\n    // { description: \"For all pet related questions\", slug: \"pets\" },\n    // { description: \"Star crossed lovers\", slug: \"astronomy\" },\n    // { description: \"Live. Laugh. Lift.\", slug: \"fitness\" },\n    // { description: \"stitch me up, scotty\", slug: \"embroidery\" },\n    { description: \"Code is love, code is life\", slug: \"coding\" },\n    { description: \"FOOTIE!\", slug: \"football\" },\n    { description: \"Hey good looking, what you got cooking?\", slug: \"cooking\" }\n  ]);\n  // axios\n  //   .get(`${baseUrl}/topics`)\n  //   .then(res => res.data)\n  //   .then(data => {\n  //     cb(data[\"topics\"]);\n  //   });\n};\n"]},"metadata":{},"sourceType":"module"}