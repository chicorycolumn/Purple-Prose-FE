{"ast":null,"code":"var _jsxFileName = \"/home/heihachu/fe-news/src/VoteDisplayOnComment.jsx\";\nimport React, { Component } from \"react\";\nimport { voteOnComment } from \"./utils/patchUtils\";\nimport styles from \"./css/Comment.module.css\"; //The intention of all this is to check the actual number of votes an article has to display the user having voted new votecount.\n//It basically works, just that you don't see the visual feedback if you already have a downvote on sth, then refresh page (which sets castedVote to 0 instead of -1)\n//and so then yes the request is sent off fine, but you dont see the feedback. Should be resolvable by using jxn table that already exists to populate whether\n//up arrow should be red or blue kinda thing.\n\nclass VoteDisplayOnComment extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      castedVote: 0\n    };\n\n    this.handleVote = voteDirection => {\n      if (this.props.currentUser !== null && this.props.currentUser !== undefined && this.props.currentUser !== \"\") {\n        voteOnComment(this.props.currentUser, this.props.article_id, voteDirection);\n        let newCastedVote = this.state.castedVote; // console.log(\"***\", this.state.castedVote, newCastedVote, \"***\");\n\n        if (newCastedVote < 1 && voteDirection === 1) {\n          // console.log(this.state.castedVote, newCastedVote);\n          // console.log(\"gonna plus\");\n          newCastedVote++; // console.log(this.state.castedVote, newCastedVote);\n        } else if (newCastedVote > -1 && voteDirection === -1) {\n          // console.log(this.state.castedVote, newCastedVote);\n          // console.log(\"gonna minus\");\n          newCastedVote--; // console.log(this.state.castedVote, newCastedVote);\n        }\n\n        this.setState({\n          castedVote: newCastedVote\n        });\n      } else {\n        alert(\"To vote on the latest news, log in or sign up!\");\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"p\", {\n      className: styles.votes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: () => {\n        this.handleVote(1);\n      },\n      role: \"img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"\\u2B06\\uFE0F\"), React.createElement(\"p\", {\n      className: styles.voteCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.state.castedVote + (this.props.votes || 0)), React.createElement(\"span\", {\n      onClick: () => {\n        this.handleVote(-1);\n      },\n      role: \"img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"\\u2B07\\uFE0F\"));\n  }\n\n}\n\nexport default VoteDisplayOnComment;","map":{"version":3,"sources":["/home/heihachu/fe-news/src/VoteDisplayOnComment.jsx"],"names":["React","Component","voteOnComment","styles","VoteDisplayOnComment","state","castedVote","handleVote","voteDirection","props","currentUser","undefined","article_id","newCastedVote","setState","alert","render","votes","voteCount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CAEA;AACA;AACA;AACA;;AAEA,MAAMC,oBAAN,SAAmCH,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAC3CI,KAD2C,GACnC;AAAEC,MAAAA,UAAU,EAAE;AAAd,KADmC;;AAAA,SAG3CC,UAH2C,GAG9BC,aAAa,IAAI;AAC5B,UACE,KAAKC,KAAL,CAAWC,WAAX,KAA2B,IAA3B,IACA,KAAKD,KAAL,CAAWC,WAAX,KAA2BC,SAD3B,IAEA,KAAKF,KAAL,CAAWC,WAAX,KAA2B,EAH7B,EAIE;AACAR,QAAAA,aAAa,CACX,KAAKO,KAAL,CAAWC,WADA,EAEX,KAAKD,KAAL,CAAWG,UAFA,EAGXJ,aAHW,CAAb;AAMA,YAAIK,aAAa,GAAG,KAAKR,KAAL,CAAWC,UAA/B,CAPA,CAQA;;AACA,YAAIO,aAAa,GAAG,CAAhB,IAAqBL,aAAa,KAAK,CAA3C,EAA8C;AAC5C;AACA;AACAK,UAAAA,aAAa,GAH+B,CAI5C;AACD,SALD,MAKO,IAAIA,aAAa,GAAG,CAAC,CAAjB,IAAsBL,aAAa,KAAK,CAAC,CAA7C,EAAgD;AACrD;AACA;AACAK,UAAAA,aAAa,GAHwC,CAIrD;AACD;;AACD,aAAKC,QAAL,CAAc;AAAER,UAAAA,UAAU,EAAEO;AAAd,SAAd;AACD,OAzBD,MAyBO;AACLE,QAAAA,KAAK,CAAC,gDAAD,CAAL;AACD;AACF,KAhC0C;AAAA;;AAkC3CC,EAAAA,MAAM,GAAG;AACP,WACE;AAAG,MAAA,SAAS,EAAEb,MAAM,CAACc,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKV,UAAL,CAAgB,CAAhB;AACD,OAHH;AAIE,MAAA,IAAI,EAAC,KAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EASE;AAAG,MAAA,SAAS,EAAEJ,MAAM,CAACe,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKb,KAAL,CAAWC,UAAX,IAAyB,KAAKG,KAAL,CAAWQ,KAAX,IAAoB,CAA7C,CADH,CATF,EAYE;AACE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKV,UAAL,CAAgB,CAAC,CAAjB;AACD,OAHH;AAIE,MAAA,IAAI,EAAC,KAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZF,CADF;AAuBD;;AA1D0C;;AA6D7C,eAAeH,oBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { voteOnComment } from \"./utils/patchUtils\";\nimport styles from \"./css/Comment.module.css\";\n\n//The intention of all this is to check the actual number of votes an article has to display the user having voted new votecount.\n//It basically works, just that you don't see the visual feedback if you already have a downvote on sth, then refresh page (which sets castedVote to 0 instead of -1)\n//and so then yes the request is sent off fine, but you dont see the feedback. Should be resolvable by using jxn table that already exists to populate whether\n//up arrow should be red or blue kinda thing.\n\nclass VoteDisplayOnComment extends Component {\n  state = { castedVote: 0 };\n\n  handleVote = voteDirection => {\n    if (\n      this.props.currentUser !== null &&\n      this.props.currentUser !== undefined &&\n      this.props.currentUser !== \"\"\n    ) {\n      voteOnComment(\n        this.props.currentUser,\n        this.props.article_id,\n        voteDirection\n      );\n\n      let newCastedVote = this.state.castedVote;\n      // console.log(\"***\", this.state.castedVote, newCastedVote, \"***\");\n      if (newCastedVote < 1 && voteDirection === 1) {\n        // console.log(this.state.castedVote, newCastedVote);\n        // console.log(\"gonna plus\");\n        newCastedVote++;\n        // console.log(this.state.castedVote, newCastedVote);\n      } else if (newCastedVote > -1 && voteDirection === -1) {\n        // console.log(this.state.castedVote, newCastedVote);\n        // console.log(\"gonna minus\");\n        newCastedVote--;\n        // console.log(this.state.castedVote, newCastedVote);\n      }\n      this.setState({ castedVote: newCastedVote });\n    } else {\n      alert(\"To vote on the latest news, log in or sign up!\");\n    }\n  };\n\n  render() {\n    return (\n      <p className={styles.votes}>\n        <span\n          onClick={() => {\n            this.handleVote(1);\n          }}\n          role=\"img\"\n        >\n          ⬆️\n        </span>\n        <p className={styles.voteCount}>\n          {this.state.castedVote + (this.props.votes || 0)}\n        </p>\n        <span\n          onClick={() => {\n            this.handleVote(-1);\n          }}\n          role=\"img\"\n        >\n          ⬇️\n        </span>\n      </p>\n    );\n  }\n}\n\nexport default VoteDisplayOnComment;\n"]},"metadata":{},"sourceType":"module"}