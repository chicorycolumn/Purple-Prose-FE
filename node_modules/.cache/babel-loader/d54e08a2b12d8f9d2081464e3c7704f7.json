{"ast":null,"code":"import React from \"react\";\nimport axios from \"axios\";\nconst baseUrl = \"https://nc-news-c-matus.herokuapp.com/api\";\nexport const fetchCommentsByArticle = (cb, article_id, justSendCount) => {\n  axios.get(`${baseUrl}/articles/${article_id}/comments`).then(res => res.data).then(data => {\n    cb(justSendCount ? data[\"comments\"].length : data[\"comments\"]);\n  });\n};\nexport const fetchArticles = (cb, qObj) => {\n  let qString = \"\";\n\n  if (qObj && Object.keys(qObj).length) {\n    let qStringArray = [];\n    Object.keys(qObj).forEach(qKey => qStringArray.push(`${qKey}=${qObj[qKey]}`));\n    qString = \"?\" + qStringArray.join(\"&\");\n  }\n\n  axios.get(`${baseUrl}/articles/${qString}`).then(res => res.data).then(data => {\n    cb(data[\"articles\"]);\n  });\n};\nexport const fetchArticleByID = (cb, article_id) => {\n  axios.get(`${baseUrl}/articles/${article_id}`).then(res => res.data).then(data => {\n    cb(data[\"article\"]);\n  });\n};\nexport const fetchArticleCountsByTopic = (cb, topicsArray) => {\n  console.log(topicsArray);\n  const promisesArr = [];\n  topicsArray.forEach(topic => promisesArr.push(axios.get(`${baseUrl}/articles?topic=${topic}&limit=none`).then(res => res.data)));\n  Promise.all(promisesArr).then(resArr => {\n    const articleCounts = {};\n\n    for (let i = 0; i < topicsArray.length; i++) {\n      console.log(topicsArray[i], resArr[i].articles.length);\n      articleCounts[topicsArray[i]] = resArr[i].articles.length;\n    }\n\n    cb(articleCounts);\n  });\n};\nexport const fetchUsers = cb => {\n  axios.get(`${baseUrl}/users`).then(res => res.data).then(data => {\n    cb(data[\"users\"]);\n  });\n};\nexport const fetchTopics = cb => {\n  cb([{\n    description: \"Please be civil.\",\n    slug: \"politics\"\n  }, {\n    description: \"For all pet related questions\",\n    slug: \"pets\"\n  }, {\n    description: \"Star crossed lovers\",\n    slug: \"astronomy\"\n  }, {\n    description: \"Live. Laugh. Lift.\",\n    slug: \"fitness\"\n  }, {\n    description: \"stitch me up, scotty\",\n    slug: \"embroidery\"\n  }, {\n    description: \"Code is love, code is life\",\n    slug: \"coding\"\n  }, {\n    description: \"FOOTIE!\",\n    slug: \"football\"\n  }, {\n    description: \"Hey good looking, what you got cooking?\",\n    slug: \"cooking\"\n  }]); // axios\n  //   .get(`${baseUrl}/topics`)\n  //   .then(res => res.data)\n  //   .then(data => {\n  //     cb(data[\"topics\"]);\n  //   });\n};","map":{"version":3,"sources":["/home/heihachu/fe-news/src/utils/getUtils.js"],"names":["React","axios","baseUrl","fetchCommentsByArticle","cb","article_id","justSendCount","get","then","res","data","length","fetchArticles","qObj","qString","Object","keys","qStringArray","forEach","qKey","push","join","fetchArticleByID","fetchArticleCountsByTopic","topicsArray","console","log","promisesArr","topic","Promise","all","resArr","articleCounts","i","articles","fetchUsers","fetchTopics","description","slug"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,2CAAhB;AAEA,OAAO,MAAMC,sBAAsB,GAAG,CAACC,EAAD,EAAKC,UAAL,EAAiBC,aAAjB,KAAmC;AACvEL,EAAAA,KAAK,CACFM,GADH,CACQ,GAAEL,OAAQ,aAAYG,UAAW,WADzC,EAEGG,IAFH,CAEQC,GAAG,IAAIA,GAAG,CAACC,IAFnB,EAGGF,IAHH,CAGQE,IAAI,IAAI;AACZN,IAAAA,EAAE,CAACE,aAAa,GAAGI,IAAI,CAAC,UAAD,CAAJ,CAAiBC,MAApB,GAA6BD,IAAI,CAAC,UAAD,CAA/C,CAAF;AACD,GALH;AAMD,CAPM;AASP,OAAO,MAAME,aAAa,GAAG,CAACR,EAAD,EAAKS,IAAL,KAAc;AACzC,MAAIC,OAAO,GAAG,EAAd;;AAEA,MAAID,IAAI,IAAIE,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBF,MAA9B,EAAsC;AACpC,QAAIM,YAAY,GAAG,EAAnB;AACAF,IAAAA,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBK,OAAlB,CAA0BC,IAAI,IAC5BF,YAAY,CAACG,IAAb,CAAmB,GAAED,IAAK,IAAGN,IAAI,CAACM,IAAD,CAAO,EAAxC,CADF;AAGAL,IAAAA,OAAO,GAAG,MAAMG,YAAY,CAACI,IAAb,CAAkB,GAAlB,CAAhB;AACD;;AACDpB,EAAAA,KAAK,CACFM,GADH,CACQ,GAAEL,OAAQ,aAAYY,OAAQ,EADtC,EAEGN,IAFH,CAEQC,GAAG,IAAIA,GAAG,CAACC,IAFnB,EAGGF,IAHH,CAGQE,IAAI,IAAI;AACZN,IAAAA,EAAE,CAACM,IAAI,CAAC,UAAD,CAAL,CAAF;AACD,GALH;AAMD,CAhBM;AAkBP,OAAO,MAAMY,gBAAgB,GAAG,CAAClB,EAAD,EAAKC,UAAL,KAAoB;AAClDJ,EAAAA,KAAK,CACFM,GADH,CACQ,GAAEL,OAAQ,aAAYG,UAAW,EADzC,EAEGG,IAFH,CAEQC,GAAG,IAAIA,GAAG,CAACC,IAFnB,EAGGF,IAHH,CAGQE,IAAI,IAAI;AACZN,IAAAA,EAAE,CAACM,IAAI,CAAC,SAAD,CAAL,CAAF;AACD,GALH;AAMD,CAPM;AASP,OAAO,MAAMa,yBAAyB,GAAG,CAACnB,EAAD,EAAKoB,WAAL,KAAqB;AAC5DC,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AAEA,QAAMG,WAAW,GAAG,EAApB;AAEAH,EAAAA,WAAW,CAACN,OAAZ,CAAoBU,KAAK,IACvBD,WAAW,CAACP,IAAZ,CACEnB,KAAK,CACFM,GADH,CACQ,GAAEL,OAAQ,mBAAkB0B,KAAM,aAD1C,EAEGpB,IAFH,CAEQC,GAAG,IAAIA,GAAG,CAACC,IAFnB,CADF,CADF;AAQAmB,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ,EAAyBnB,IAAzB,CAA8BuB,MAAM,IAAI;AACtC,UAAMC,aAAa,GAAG,EAAtB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,WAAW,CAACb,MAAhC,EAAwCsB,CAAC,EAAzC,EAA6C;AAC3CR,MAAAA,OAAO,CAACC,GAAR,CAAYF,WAAW,CAACS,CAAD,CAAvB,EAA4BF,MAAM,CAACE,CAAD,CAAN,CAAUC,QAAV,CAAmBvB,MAA/C;AACAqB,MAAAA,aAAa,CAACR,WAAW,CAACS,CAAD,CAAZ,CAAb,GAAgCF,MAAM,CAACE,CAAD,CAAN,CAAUC,QAAV,CAAmBvB,MAAnD;AACD;;AAEDP,IAAAA,EAAE,CAAC4B,aAAD,CAAF;AACD,GATD;AAUD,CAvBM;AAyBP,OAAO,MAAMG,UAAU,GAAG/B,EAAE,IAAI;AAC9BH,EAAAA,KAAK,CACFM,GADH,CACQ,GAAEL,OAAQ,QADlB,EAEGM,IAFH,CAEQC,GAAG,IAAIA,GAAG,CAACC,IAFnB,EAGGF,IAHH,CAGQE,IAAI,IAAI;AACZN,IAAAA,EAAE,CAACM,IAAI,CAAC,OAAD,CAAL,CAAF;AACD,GALH;AAMD,CAPM;AASP,OAAO,MAAM0B,WAAW,GAAGhC,EAAE,IAAI;AAC/BA,EAAAA,EAAE,CAAC,CACD;AAAEiC,IAAAA,WAAW,EAAE,kBAAf;AAAmCC,IAAAA,IAAI,EAAE;AAAzC,GADC,EAED;AAAED,IAAAA,WAAW,EAAE,+BAAf;AAAgDC,IAAAA,IAAI,EAAE;AAAtD,GAFC,EAGD;AAAED,IAAAA,WAAW,EAAE,qBAAf;AAAsCC,IAAAA,IAAI,EAAE;AAA5C,GAHC,EAID;AAAED,IAAAA,WAAW,EAAE,oBAAf;AAAqCC,IAAAA,IAAI,EAAE;AAA3C,GAJC,EAKD;AAAED,IAAAA,WAAW,EAAE,sBAAf;AAAuCC,IAAAA,IAAI,EAAE;AAA7C,GALC,EAMD;AAAED,IAAAA,WAAW,EAAE,4BAAf;AAA6CC,IAAAA,IAAI,EAAE;AAAnD,GANC,EAOD;AAAED,IAAAA,WAAW,EAAE,SAAf;AAA0BC,IAAAA,IAAI,EAAE;AAAhC,GAPC,EAQD;AAAED,IAAAA,WAAW,EAAE,yCAAf;AAA0DC,IAAAA,IAAI,EAAE;AAAhE,GARC,CAAD,CAAF,CAD+B,CAW/B;AACA;AACA;AACA;AACA;AACA;AACD,CAjBM","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nconst baseUrl = \"https://nc-news-c-matus.herokuapp.com/api\";\n\nexport const fetchCommentsByArticle = (cb, article_id, justSendCount) => {\n  axios\n    .get(`${baseUrl}/articles/${article_id}/comments`)\n    .then(res => res.data)\n    .then(data => {\n      cb(justSendCount ? data[\"comments\"].length : data[\"comments\"]);\n    });\n};\n\nexport const fetchArticles = (cb, qObj) => {\n  let qString = \"\";\n\n  if (qObj && Object.keys(qObj).length) {\n    let qStringArray = [];\n    Object.keys(qObj).forEach(qKey =>\n      qStringArray.push(`${qKey}=${qObj[qKey]}`)\n    );\n    qString = \"?\" + qStringArray.join(\"&\");\n  }\n  axios\n    .get(`${baseUrl}/articles/${qString}`)\n    .then(res => res.data)\n    .then(data => {\n      cb(data[\"articles\"]);\n    });\n};\n\nexport const fetchArticleByID = (cb, article_id) => {\n  axios\n    .get(`${baseUrl}/articles/${article_id}`)\n    .then(res => res.data)\n    .then(data => {\n      cb(data[\"article\"]);\n    });\n};\n\nexport const fetchArticleCountsByTopic = (cb, topicsArray) => {\n  console.log(topicsArray);\n\n  const promisesArr = [];\n\n  topicsArray.forEach(topic =>\n    promisesArr.push(\n      axios\n        .get(`${baseUrl}/articles?topic=${topic}&limit=none`)\n        .then(res => res.data)\n    )\n  );\n\n  Promise.all(promisesArr).then(resArr => {\n    const articleCounts = {};\n\n    for (let i = 0; i < topicsArray.length; i++) {\n      console.log(topicsArray[i], resArr[i].articles.length);\n      articleCounts[topicsArray[i]] = resArr[i].articles.length;\n    }\n\n    cb(articleCounts);\n  });\n};\n\nexport const fetchUsers = cb => {\n  axios\n    .get(`${baseUrl}/users`)\n    .then(res => res.data)\n    .then(data => {\n      cb(data[\"users\"]);\n    });\n};\n\nexport const fetchTopics = cb => {\n  cb([\n    { description: \"Please be civil.\", slug: \"politics\" },\n    { description: \"For all pet related questions\", slug: \"pets\" },\n    { description: \"Star crossed lovers\", slug: \"astronomy\" },\n    { description: \"Live. Laugh. Lift.\", slug: \"fitness\" },\n    { description: \"stitch me up, scotty\", slug: \"embroidery\" },\n    { description: \"Code is love, code is life\", slug: \"coding\" },\n    { description: \"FOOTIE!\", slug: \"football\" },\n    { description: \"Hey good looking, what you got cooking?\", slug: \"cooking\" }\n  ]);\n  // axios\n  //   .get(`${baseUrl}/topics`)\n  //   .then(res => res.data)\n  //   .then(data => {\n  //     cb(data[\"topics\"]);\n  //   });\n};\n"]},"metadata":{},"sourceType":"module"}