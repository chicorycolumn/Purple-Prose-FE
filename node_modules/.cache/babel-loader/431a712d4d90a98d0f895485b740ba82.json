{"ast":null,"code":"import React from \"react\";\nimport axios from \"axios\";\nconst baseUrl = \"https://nc-news-c-matus.herokuapp.com/api\";\nexport const fetchArticleWithComments = (cb, article_id) => {\n  Promise.all([axios.get(`${baseUrl}/articles/${article_id}`).then(res => res.data), axios.get(`${baseUrl}/articles/${article_id}/comments`).then(res => res.data)]).then(resArr => {\n    const articleData = resArr[0];\n    const commentData = resArr[1];\n    console.log(commentData[\"comments\"]);\n    cb(articleData[\"article\"], commentData[\"comments\"]);\n  });\n};\nexport const fetchArticles = (cb, qObj) => {\n  let qString = \"\";\n\n  if (qObj && Object.keys(qObj).length) {\n    let qStringArray = [];\n    Object.keys(qObj).forEach(qKey => qStringArray.push(`${qKey}=${qObj[qKey]}`));\n    qString = \"?\" + qStringArray.join(\"&\");\n  }\n\n  axios.get(`${baseUrl}/articles/${qString}`).then(res => res.data).then(data => {\n    cb(data[\"articles\"]);\n  });\n};\nexport const fetchArticleByID = (cb, article_id) => {\n  axios.get(`${baseUrl}/articles/${article_id}`).then(res => res.data).then(data => {\n    cb(data[\"article\"]);\n  });\n};\nexport const fetchArticleCountsByTopic = (cb, topicsArray) => {\n  console.log(topicsArray);\n  const promisesArr = [];\n  topicsArray.forEach(topic => promisesArr.push(axios.get(`${baseUrl}/articles?topic=${topic}&limit=none`).then(res => res.data)));\n  Promise.all(promisesArr).then(resArr => {\n    const articleCounts = {};\n\n    for (let i = 0; i < topicsArray.length; i++) {\n      console.log(topicsArray[i], resArr[i].articles.length);\n      articleCounts[topicsArray[i]] = resArr[i].articles.length;\n    }\n\n    cb(articleCounts);\n  });\n};\nexport const fetchUsers = cb => {\n  axios.get(`${baseUrl}/users`).then(res => res.data).then(data => {\n    cb(data[\"users\"]);\n  });\n};\nexport const fetchTopics = cb => {\n  cb([{\n    description: \"Please be civil.\",\n    slug: \"politics\"\n  }, {\n    description: \"For all pet related questions\",\n    slug: \"pets\"\n  }, {\n    description: \"Star crossed lovers\",\n    slug: \"astronomy\"\n  }, {\n    description: \"Live. Laugh. Lift.\",\n    slug: \"fitness\"\n  }, {\n    description: \"stitch me up, scotty\",\n    slug: \"embroidery\"\n  }, {\n    description: \"Code is love, code is life\",\n    slug: \"coding\"\n  }, {\n    description: \"FOOTIE!\",\n    slug: \"football\"\n  }, {\n    description: \"Hey good looking, what you got cooking?\",\n    slug: \"cooking\"\n  }]); // axios\n  //   .get(`${baseUrl}/topics`)\n  //   .then(res => res.data)\n  //   .then(data => {\n  //     cb(data[\"topics\"]);\n  //   });\n};","map":{"version":3,"sources":["/home/heihachu/fe-news/src/utils/getUtils.js"],"names":["React","axios","baseUrl","fetchArticleWithComments","cb","article_id","Promise","all","get","then","res","data","resArr","articleData","commentData","console","log","fetchArticles","qObj","qString","Object","keys","length","qStringArray","forEach","qKey","push","join","fetchArticleByID","fetchArticleCountsByTopic","topicsArray","promisesArr","topic","articleCounts","i","articles","fetchUsers","fetchTopics","description","slug"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,2CAAhB;AAEA,OAAO,MAAMC,wBAAwB,GAAG,CAACC,EAAD,EAAKC,UAAL,KAAoB;AAC1DC,EAAAA,OAAO,CAACC,GAAR,CAAY,CACVN,KAAK,CAACO,GAAN,CAAW,GAAEN,OAAQ,aAAYG,UAAW,EAA5C,EAA+CI,IAA/C,CAAoDC,GAAG,IAAIA,GAAG,CAACC,IAA/D,CADU,EAGVV,KAAK,CACFO,GADH,CACQ,GAAEN,OAAQ,aAAYG,UAAW,WADzC,EAEGI,IAFH,CAEQC,GAAG,IAAIA,GAAG,CAACC,IAFnB,CAHU,CAAZ,EAMGF,IANH,CAMQG,MAAM,IAAI;AAChB,UAAMC,WAAW,GAAGD,MAAM,CAAC,CAAD,CAA1B;AACA,UAAME,WAAW,GAAGF,MAAM,CAAC,CAAD,CAA1B;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,WAAW,CAAC,UAAD,CAAvB;AACAV,IAAAA,EAAE,CAACS,WAAW,CAAC,SAAD,CAAZ,EAAyBC,WAAW,CAAC,UAAD,CAApC,CAAF;AACD,GAXD;AAYD,CAbM;AAeP,OAAO,MAAMG,aAAa,GAAG,CAACb,EAAD,EAAKc,IAAL,KAAc;AACzC,MAAIC,OAAO,GAAG,EAAd;;AAEA,MAAID,IAAI,IAAIE,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBI,MAA9B,EAAsC;AACpC,QAAIC,YAAY,GAAG,EAAnB;AACAH,IAAAA,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBM,OAAlB,CAA0BC,IAAI,IAC5BF,YAAY,CAACG,IAAb,CAAmB,GAAED,IAAK,IAAGP,IAAI,CAACO,IAAD,CAAO,EAAxC,CADF;AAGAN,IAAAA,OAAO,GAAG,MAAMI,YAAY,CAACI,IAAb,CAAkB,GAAlB,CAAhB;AACD;;AACD1B,EAAAA,KAAK,CACFO,GADH,CACQ,GAAEN,OAAQ,aAAYiB,OAAQ,EADtC,EAEGV,IAFH,CAEQC,GAAG,IAAIA,GAAG,CAACC,IAFnB,EAGGF,IAHH,CAGQE,IAAI,IAAI;AACZP,IAAAA,EAAE,CAACO,IAAI,CAAC,UAAD,CAAL,CAAF;AACD,GALH;AAMD,CAhBM;AAkBP,OAAO,MAAMiB,gBAAgB,GAAG,CAACxB,EAAD,EAAKC,UAAL,KAAoB;AAClDJ,EAAAA,KAAK,CACFO,GADH,CACQ,GAAEN,OAAQ,aAAYG,UAAW,EADzC,EAEGI,IAFH,CAEQC,GAAG,IAAIA,GAAG,CAACC,IAFnB,EAGGF,IAHH,CAGQE,IAAI,IAAI;AACZP,IAAAA,EAAE,CAACO,IAAI,CAAC,SAAD,CAAL,CAAF;AACD,GALH;AAMD,CAPM;AASP,OAAO,MAAMkB,yBAAyB,GAAG,CAACzB,EAAD,EAAK0B,WAAL,KAAqB;AAC5Df,EAAAA,OAAO,CAACC,GAAR,CAAYc,WAAZ;AAEA,QAAMC,WAAW,GAAG,EAApB;AAEAD,EAAAA,WAAW,CAACN,OAAZ,CAAoBQ,KAAK,IACvBD,WAAW,CAACL,IAAZ,CACEzB,KAAK,CACFO,GADH,CACQ,GAAEN,OAAQ,mBAAkB8B,KAAM,aAD1C,EAEGvB,IAFH,CAEQC,GAAG,IAAIA,GAAG,CAACC,IAFnB,CADF,CADF;AAQAL,EAAAA,OAAO,CAACC,GAAR,CAAYwB,WAAZ,EAAyBtB,IAAzB,CAA8BG,MAAM,IAAI;AACtC,UAAMqB,aAAa,GAAG,EAAtB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,WAAW,CAACR,MAAhC,EAAwCY,CAAC,EAAzC,EAA6C;AAC3CnB,MAAAA,OAAO,CAACC,GAAR,CAAYc,WAAW,CAACI,CAAD,CAAvB,EAA4BtB,MAAM,CAACsB,CAAD,CAAN,CAAUC,QAAV,CAAmBb,MAA/C;AACAW,MAAAA,aAAa,CAACH,WAAW,CAACI,CAAD,CAAZ,CAAb,GAAgCtB,MAAM,CAACsB,CAAD,CAAN,CAAUC,QAAV,CAAmBb,MAAnD;AACD;;AAEDlB,IAAAA,EAAE,CAAC6B,aAAD,CAAF;AACD,GATD;AAUD,CAvBM;AAyBP,OAAO,MAAMG,UAAU,GAAGhC,EAAE,IAAI;AAC9BH,EAAAA,KAAK,CACFO,GADH,CACQ,GAAEN,OAAQ,QADlB,EAEGO,IAFH,CAEQC,GAAG,IAAIA,GAAG,CAACC,IAFnB,EAGGF,IAHH,CAGQE,IAAI,IAAI;AACZP,IAAAA,EAAE,CAACO,IAAI,CAAC,OAAD,CAAL,CAAF;AACD,GALH;AAMD,CAPM;AASP,OAAO,MAAM0B,WAAW,GAAGjC,EAAE,IAAI;AAC/BA,EAAAA,EAAE,CAAC,CACD;AAAEkC,IAAAA,WAAW,EAAE,kBAAf;AAAmCC,IAAAA,IAAI,EAAE;AAAzC,GADC,EAED;AAAED,IAAAA,WAAW,EAAE,+BAAf;AAAgDC,IAAAA,IAAI,EAAE;AAAtD,GAFC,EAGD;AAAED,IAAAA,WAAW,EAAE,qBAAf;AAAsCC,IAAAA,IAAI,EAAE;AAA5C,GAHC,EAID;AAAED,IAAAA,WAAW,EAAE,oBAAf;AAAqCC,IAAAA,IAAI,EAAE;AAA3C,GAJC,EAKD;AAAED,IAAAA,WAAW,EAAE,sBAAf;AAAuCC,IAAAA,IAAI,EAAE;AAA7C,GALC,EAMD;AAAED,IAAAA,WAAW,EAAE,4BAAf;AAA6CC,IAAAA,IAAI,EAAE;AAAnD,GANC,EAOD;AAAED,IAAAA,WAAW,EAAE,SAAf;AAA0BC,IAAAA,IAAI,EAAE;AAAhC,GAPC,EAQD;AAAED,IAAAA,WAAW,EAAE,yCAAf;AAA0DC,IAAAA,IAAI,EAAE;AAAhE,GARC,CAAD,CAAF,CAD+B,CAW/B;AACA;AACA;AACA;AACA;AACA;AACD,CAjBM","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nconst baseUrl = \"https://nc-news-c-matus.herokuapp.com/api\";\n\nexport const fetchArticleWithComments = (cb, article_id) => {\n  Promise.all([\n    axios.get(`${baseUrl}/articles/${article_id}`).then(res => res.data),\n\n    axios\n      .get(`${baseUrl}/articles/${article_id}/comments`)\n      .then(res => res.data)\n  ]).then(resArr => {\n    const articleData = resArr[0];\n    const commentData = resArr[1];\n    console.log(commentData[\"comments\"]);\n    cb(articleData[\"article\"], commentData[\"comments\"]);\n  });\n};\n\nexport const fetchArticles = (cb, qObj) => {\n  let qString = \"\";\n\n  if (qObj && Object.keys(qObj).length) {\n    let qStringArray = [];\n    Object.keys(qObj).forEach(qKey =>\n      qStringArray.push(`${qKey}=${qObj[qKey]}`)\n    );\n    qString = \"?\" + qStringArray.join(\"&\");\n  }\n  axios\n    .get(`${baseUrl}/articles/${qString}`)\n    .then(res => res.data)\n    .then(data => {\n      cb(data[\"articles\"]);\n    });\n};\n\nexport const fetchArticleByID = (cb, article_id) => {\n  axios\n    .get(`${baseUrl}/articles/${article_id}`)\n    .then(res => res.data)\n    .then(data => {\n      cb(data[\"article\"]);\n    });\n};\n\nexport const fetchArticleCountsByTopic = (cb, topicsArray) => {\n  console.log(topicsArray);\n\n  const promisesArr = [];\n\n  topicsArray.forEach(topic =>\n    promisesArr.push(\n      axios\n        .get(`${baseUrl}/articles?topic=${topic}&limit=none`)\n        .then(res => res.data)\n    )\n  );\n\n  Promise.all(promisesArr).then(resArr => {\n    const articleCounts = {};\n\n    for (let i = 0; i < topicsArray.length; i++) {\n      console.log(topicsArray[i], resArr[i].articles.length);\n      articleCounts[topicsArray[i]] = resArr[i].articles.length;\n    }\n\n    cb(articleCounts);\n  });\n};\n\nexport const fetchUsers = cb => {\n  axios\n    .get(`${baseUrl}/users`)\n    .then(res => res.data)\n    .then(data => {\n      cb(data[\"users\"]);\n    });\n};\n\nexport const fetchTopics = cb => {\n  cb([\n    { description: \"Please be civil.\", slug: \"politics\" },\n    { description: \"For all pet related questions\", slug: \"pets\" },\n    { description: \"Star crossed lovers\", slug: \"astronomy\" },\n    { description: \"Live. Laugh. Lift.\", slug: \"fitness\" },\n    { description: \"stitch me up, scotty\", slug: \"embroidery\" },\n    { description: \"Code is love, code is life\", slug: \"coding\" },\n    { description: \"FOOTIE!\", slug: \"football\" },\n    { description: \"Hey good looking, what you got cooking?\", slug: \"cooking\" }\n  ]);\n  // axios\n  //   .get(`${baseUrl}/topics`)\n  //   .then(res => res.data)\n  //   .then(data => {\n  //     cb(data[\"topics\"]);\n  //   });\n};\n"]},"metadata":{},"sourceType":"module"}