{"ast":null,"code":"var _jsxFileName = \"/home/heihachu/fe-news/src/SingleArticle.jsx\";\nimport React from \"react\";\nimport styles from \"./css/SingleArticle.module.css\";\nimport { Router, Link, navigate } from \"@reach/router\";\nimport { voteOnArticle, postNewComment } from \"./utils/patchUtils\";\nimport VoteDisplayOnArticle from \"./VoteDisplayOnArticle\";\nimport { fetchArticleByID, fetchArticleWithComments } from \"./utils/getUtils\";\nimport CommentGrid from \"./CommentGrid\";\n\nclass SingleArticle extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      createCommentDisplaying: false,\n      newCommentInput: \"\",\n      article: null,\n      comments: null,\n      isLoading: true,\n      refreshTicket: 0\n    };\n\n    this.sneakyUpwardChange = (article, comments) => {\n      this.setState({\n        article,\n        comments,\n        isLoading: false,\n        refreshTicket: Math.random()\n      });\n    };\n\n    this.sneakyUpwardDelete = comment_id => {\n      this.setState(currState => {\n        let newCommentArray = currState.comments.filter(comment => comment.comment_id !== comment_id);\n        return {\n          comments: newCommentArray\n        };\n      });\n    };\n\n    this.submitNewComment = event => {\n      event.preventDefault();\n      postNewComment(this.props.currentUser, this.state.article.article_id, this.state.newCommentInput).then(newlyComment => {\n        this.setState(currState => {\n          return {\n            comments: [newlyComment, ...currState.comments]\n          };\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetchArticleWithComments(this.sneakyUpwardChange, this.props.article_id);\n  }\n\n  render() {\n    const lookup = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]; // const {\n    //   title,\n    //   author,\n    //   topic,\n    //   created_at,\n    //   article_id,\n    //   votes\n    // } = this.state.article;\n    // const year = new Date(created_at).getFullYear();\n    // const month = new Date(created_at).getMonth();\n    // const day = new Date(created_at).getDate();\n    // const hour = new Date(created_at).getHours();\n    // const minute = new Date(created_at).getMinutes();\n    // const formattedDate = `${lookup[month]} ${day} ${hour}:${minute} (${year})`;\n\n    return React.createElement(React.Fragment, null, this.state.isLoading ? \"loading...\" : React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: styles.containerGrid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.centralContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.state.article.title), React.createElement(\"p\", {\n      className: styles.author,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"by \", this.state.article.author)), React.createElement(\"div\", {\n      className: styles.bodyContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: styles.bodyText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.state.article.body)), React.createElement(\"button\", {\n      onClick: () => {\n        this.setState(currState => {\n          return {\n            createCommentDisplaying: !currState.createCommentDisplaying\n          };\n        });\n      },\n      className: styles.joinConvoButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.state.createCommentDisplaying ? \"Maybe later...\" : \"Join the conversation!\"), React.createElement(\"div\", {\n      className: styles.leftHandSideContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: styles.rightHandSideContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: styles.topic,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, this.state.article.topic), React.createElement(\"p\", {\n      className: styles.comments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      role: \"img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"\\uD83D\\uDCAC\"), ` ${this.state.article.comment_count} `), React.createElement(\"p\", {\n      className: styles.created_at,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, `${lookup[new Date(this.state.article.created_at).getMonth()]} ${new Date(this.state.article.created_at).getDate()} ${new Date(this.state.article.created_at).getHours()}:${new Date(this.state.article.created_at).getMinutes()} (${new Date(this.state.article.created_at).getFullYear()})`)), this.state.createCommentDisplaying && React.createElement(\"div\", {\n      className: styles.newCommentOverbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.newCommentHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.boxInHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, this.props.currentUser && React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      className: styles.newCommentInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"posting as\"), React.createElement(\"p\", {\n      className: styles.usernameOnComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, this.props.currentUser))), React.createElement(\"button\", {\n      className: styles.newCommentSubmitButton,\n      onClick: this.submitNewComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Say it!\")), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      rows: \"3\",\n      cols: \"80\",\n      className: styles.newCommentInputField,\n      onChange: event => {\n        this.setState({\n          newCommentInput: event.target.value\n        });\n      },\n      value: this.state.newCommentInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, this.state.comments.map(comment => React.createElement(CommentGrid, {\n      comment: comment,\n      currentUser: this.props.currentUser,\n      article_id: this.state.article.article_id,\n      sneakyUpwardDelete: this.sneakyUpwardDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default SingleArticle;","map":{"version":3,"sources":["/home/heihachu/fe-news/src/SingleArticle.jsx"],"names":["React","styles","Router","Link","navigate","voteOnArticle","postNewComment","VoteDisplayOnArticle","fetchArticleByID","fetchArticleWithComments","CommentGrid","SingleArticle","Component","state","createCommentDisplaying","newCommentInput","article","comments","isLoading","refreshTicket","sneakyUpwardChange","setState","Math","random","sneakyUpwardDelete","comment_id","currState","newCommentArray","filter","comment","submitNewComment","event","preventDefault","props","currentUser","article_id","then","newlyComment","componentDidMount","render","lookup","containerGrid","centralContainer","title","author","bodyContainer","bodyText","body","joinConvoButton","leftHandSideContainer","rightHandSideContainer","topic","comment_count","created_at","Date","getMonth","getDate","getHours","getMinutes","getFullYear","newCommentOverbox","newCommentHeader","boxInHeader","newCommentInfo","usernameOnComment","newCommentSubmitButton","newCommentInputField","target","value","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styles from \"./css/SingleArticle.module.css\";\nimport { Router, Link, navigate } from \"@reach/router\";\nimport { voteOnArticle, postNewComment } from \"./utils/patchUtils\";\nimport VoteDisplayOnArticle from \"./VoteDisplayOnArticle\";\nimport { fetchArticleByID, fetchArticleWithComments } from \"./utils/getUtils\";\nimport CommentGrid from \"./CommentGrid\";\n\nclass SingleArticle extends React.Component {\n  state = {\n    createCommentDisplaying: false,\n    newCommentInput: \"\",\n    article: null,\n    comments: null,\n    isLoading: true,\n    refreshTicket: 0\n  };\n\n  sneakyUpwardChange = (article, comments) => {\n    this.setState({\n      article,\n      comments,\n      isLoading: false,\n      refreshTicket: Math.random()\n    });\n  };\n\n  sneakyUpwardDelete = comment_id => {\n    this.setState(currState => {\n      let newCommentArray = currState.comments.filter(\n        comment => comment.comment_id !== comment_id\n      );\n\n      return { comments: newCommentArray };\n    });\n  };\n\n  componentDidMount() {\n    fetchArticleWithComments(this.sneakyUpwardChange, this.props.article_id);\n  }\n\n  submitNewComment = event => {\n    event.preventDefault();\n    postNewComment(\n      this.props.currentUser,\n      this.state.article.article_id,\n      this.state.newCommentInput\n    ).then(newlyComment => {\n      this.setState(currState => {\n        return { comments: [newlyComment, ...currState.comments] };\n      });\n    });\n  };\n\n  render() {\n    const lookup = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ];\n    // const {\n    //   title,\n    //   author,\n    //   topic,\n    //   created_at,\n    //   article_id,\n    //   votes\n    // } = this.state.article;\n    // const year = new Date(created_at).getFullYear();\n    // const month = new Date(created_at).getMonth();\n    // const day = new Date(created_at).getDate();\n    // const hour = new Date(created_at).getHours();\n    // const minute = new Date(created_at).getMinutes();\n    // const formattedDate = `${lookup[month]} ${day} ${hour}:${minute} (${year})`;\n    return (\n      <>\n        {this.state.isLoading ? (\n          \"loading...\"\n        ) : (\n          <>\n            <div className={styles.containerGrid}>\n              <div className={styles.centralContainer}>\n                <p className={styles.title}>{this.state.article.title}</p>\n                <p className={styles.author}>by {this.state.article.author}</p>\n              </div>\n\n              <div className={styles.bodyContainer}>\n                <p className={styles.bodyText}>{this.state.article.body}</p>\n              </div>\n\n              <button\n                onClick={() => {\n                  this.setState(currState => {\n                    return {\n                      createCommentDisplaying: !currState.createCommentDisplaying\n                    };\n                  });\n                }}\n                className={styles.joinConvoButton}\n              >\n                {this.state.createCommentDisplaying\n                  ? \"Maybe later...\"\n                  : \"Join the conversation!\"}\n              </button>\n\n              <div className={styles.leftHandSideContainer}>\n                {/* <VoteDisplayOnArticle\n                  currentUser={this.props.currentUser}\n                  article_id={this.state.article.article_id}\n                  votes={this.state.article.votes}\n                  refreshTicket={this.state.refreshTicket}\n                /> */}\n              </div>\n\n              <div className={styles.rightHandSideContainer}>\n                <p className={styles.topic}>{this.state.article.topic}</p>\n                <p className={styles.comments}>\n                  <span role=\"img\">💬</span>\n                  {` ${this.state.article.comment_count} `}\n                </p>\n                <p className={styles.created_at}>{`${\n                  lookup[new Date(this.state.article.created_at).getMonth()]\n                } ${new Date(\n                  this.state.article.created_at\n                ).getDate()} ${new Date(\n                  this.state.article.created_at\n                ).getHours()}:${new Date(\n                  this.state.article.created_at\n                ).getMinutes()} (${new Date(\n                  this.state.article.created_at\n                ).getFullYear()})`}</p>\n              </div>\n              {this.state.createCommentDisplaying && (\n                <div className={styles.newCommentOverbox}>\n                  <div className={styles.newCommentHeader}>\n                    <div className={styles.boxInHeader}>\n                      {this.props.currentUser && (\n                        <>\n                          <p className={styles.newCommentInfo}>posting as</p>\n\n                          <p className={styles.usernameOnComment}>\n                            {this.props.currentUser}\n                          </p>\n                        </>\n                      )}\n                    </div>\n\n                    <button\n                      className={styles.newCommentSubmitButton}\n                      onClick={this.submitNewComment}\n                    >\n                      Say it!\n                    </button>\n                  </div>\n                  <form>\n                    <textarea\n                      rows=\"3\"\n                      cols=\"80\"\n                      className={styles.newCommentInputField}\n                      onChange={event => {\n                        this.setState({ newCommentInput: event.target.value });\n                      }}\n                      value={this.state.newCommentInput}\n                    ></textarea>\n                  </form>\n                </div>\n              )}\n            </div>\n\n            <div>\n              {this.state.comments.map(comment => (\n                <CommentGrid\n                  comment={comment}\n                  currentUser={this.props.currentUser}\n                  article_id={this.state.article.article_id}\n                  sneakyUpwardDelete={this.sneakyUpwardDelete}\n                />\n              ))}\n            </div>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default SingleArticle;\n"]},"metadata":{},"sourceType":"module"}