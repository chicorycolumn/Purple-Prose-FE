{"ast":null,"code":"import React from \"react\";\nimport axios from \"axios\";\nconst baseUrl = \"https://nc-news-c-matus.herokuapp.com/api\";\nexport const fetchArticles = (cb, qObj, justReturnCount) => {\n  let qString = \"\";\n\n  if (Object.keys(qObj).length) {\n    let qStringArray = [];\n    Object.keys(qObj).forEach(qKey => qStringArray += `${qKey}=${qObj[qKey]}`);\n    qString = \"?\" + qStringArray.join(\"&\");\n  }\n\n  if (justReturnCount) {\n    axios.get(`${baseUrl}/articles/${qString}`).then(res => res.data).then(data => {\n      cb(data[\"articles\"]);\n    });\n  } else {\n    axios.get(`${baseUrl}/articles/${qString}`).then(res => res.data).then(data => {\n      cb(data[\"articles\"]);\n    });\n  }\n};\nexport const fetchUsers = cb => {\n  axios.get(`${baseUrl}/users`).then(res => res.data).then(data => {\n    cb(data[\"users\"]);\n  });\n};\nexport const fetchTopics = cb => {\n  cb([{\n    description: \"Please be civil.\",\n    slug: \"politics\"\n  }, {\n    description: \"For all pet related questions\",\n    slug: \"pets\"\n  }, {\n    description: \"Star crossed lovers\",\n    slug: \"astronomy\"\n  }, {\n    description: \"Live. Laugh. Lift.\",\n    slug: \"fitness\"\n  }, {\n    description: \"stitch me up, scotty\",\n    slug: \"embroidery\"\n  }, {\n    description: \"Code is love, code is life\",\n    slug: \"coding\"\n  }, {\n    description: \"FOOTIE!\",\n    slug: \"football\"\n  }, {\n    description: \"Hey good looking, what you got cooking?\",\n    slug: \"cooking\"\n  }]); // axios\n  //   .get(`${baseUrl}/topics`)\n  //   .then(res => res.data)\n  //   .then(data => {\n  //     cb(data[\"topics\"]);\n  //   });\n};","map":{"version":3,"sources":["/home/heihachu/fe-news/src/utils/getUtils.js"],"names":["React","axios","baseUrl","fetchArticles","cb","qObj","justReturnCount","qString","Object","keys","length","qStringArray","forEach","qKey","join","get","then","res","data","fetchUsers","fetchTopics","description","slug"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,2CAAhB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,EAAD,EAAKC,IAAL,EAAWC,eAAX,KAA+B;AAC1D,MAAIC,OAAO,GAAG,EAAd;;AAEA,MAAIC,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,MAAtB,EAA8B;AAC5B,QAAIC,YAAY,GAAG,EAAnB;AACAH,IAAAA,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBO,OAAlB,CACEC,IAAI,IAAKF,YAAY,IAAK,GAAEE,IAAK,IAAGR,IAAI,CAACQ,IAAD,CAAO,EADjD;AAGAN,IAAAA,OAAO,GAAG,MAAMI,YAAY,CAACG,IAAb,CAAkB,GAAlB,CAAhB;AACD;;AAED,MAAIR,eAAJ,EAAqB;AACnBL,IAAAA,KAAK,CACFc,GADH,CACQ,GAAEb,OAAQ,aAAYK,OAAQ,EADtC,EAEGS,IAFH,CAEQC,GAAG,IAAIA,GAAG,CAACC,IAFnB,EAGGF,IAHH,CAGQE,IAAI,IAAI;AACZd,MAAAA,EAAE,CAACc,IAAI,CAAC,UAAD,CAAL,CAAF;AACD,KALH;AAMD,GAPD,MAOO;AACLjB,IAAAA,KAAK,CACFc,GADH,CACQ,GAAEb,OAAQ,aAAYK,OAAQ,EADtC,EAEGS,IAFH,CAEQC,GAAG,IAAIA,GAAG,CAACC,IAFnB,EAGGF,IAHH,CAGQE,IAAI,IAAI;AACZd,MAAAA,EAAE,CAACc,IAAI,CAAC,UAAD,CAAL,CAAF;AACD,KALH;AAMD;AACF,CA1BM;AA4BP,OAAO,MAAMC,UAAU,GAAGf,EAAE,IAAI;AAC9BH,EAAAA,KAAK,CACFc,GADH,CACQ,GAAEb,OAAQ,QADlB,EAEGc,IAFH,CAEQC,GAAG,IAAIA,GAAG,CAACC,IAFnB,EAGGF,IAHH,CAGQE,IAAI,IAAI;AACZd,IAAAA,EAAE,CAACc,IAAI,CAAC,OAAD,CAAL,CAAF;AACD,GALH;AAMD,CAPM;AASP,OAAO,MAAME,WAAW,GAAGhB,EAAE,IAAI;AAC/BA,EAAAA,EAAE,CAAC,CACD;AAAEiB,IAAAA,WAAW,EAAE,kBAAf;AAAmCC,IAAAA,IAAI,EAAE;AAAzC,GADC,EAED;AAAED,IAAAA,WAAW,EAAE,+BAAf;AAAgDC,IAAAA,IAAI,EAAE;AAAtD,GAFC,EAGD;AAAED,IAAAA,WAAW,EAAE,qBAAf;AAAsCC,IAAAA,IAAI,EAAE;AAA5C,GAHC,EAID;AAAED,IAAAA,WAAW,EAAE,oBAAf;AAAqCC,IAAAA,IAAI,EAAE;AAA3C,GAJC,EAKD;AAAED,IAAAA,WAAW,EAAE,sBAAf;AAAuCC,IAAAA,IAAI,EAAE;AAA7C,GALC,EAMD;AAAED,IAAAA,WAAW,EAAE,4BAAf;AAA6CC,IAAAA,IAAI,EAAE;AAAnD,GANC,EAOD;AAAED,IAAAA,WAAW,EAAE,SAAf;AAA0BC,IAAAA,IAAI,EAAE;AAAhC,GAPC,EAQD;AAAED,IAAAA,WAAW,EAAE,yCAAf;AAA0DC,IAAAA,IAAI,EAAE;AAAhE,GARC,CAAD,CAAF,CAD+B,CAW/B;AACA;AACA;AACA;AACA;AACA;AACD,CAjBM","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nconst baseUrl = \"https://nc-news-c-matus.herokuapp.com/api\";\n\nexport const fetchArticles = (cb, qObj, justReturnCount) => {\n  let qString = \"\";\n\n  if (Object.keys(qObj).length) {\n    let qStringArray = [];\n    Object.keys(qObj).forEach(\n      qKey => (qStringArray += `${qKey}=${qObj[qKey]}`)\n    );\n    qString = \"?\" + qStringArray.join(\"&\");\n  }\n\n  if (justReturnCount) {\n    axios\n      .get(`${baseUrl}/articles/${qString}`)\n      .then(res => res.data)\n      .then(data => {\n        cb(data[\"articles\"]);\n      });\n  } else {\n    axios\n      .get(`${baseUrl}/articles/${qString}`)\n      .then(res => res.data)\n      .then(data => {\n        cb(data[\"articles\"]);\n      });\n  }\n};\n\nexport const fetchUsers = cb => {\n  axios\n    .get(`${baseUrl}/users`)\n    .then(res => res.data)\n    .then(data => {\n      cb(data[\"users\"]);\n    });\n};\n\nexport const fetchTopics = cb => {\n  cb([\n    { description: \"Please be civil.\", slug: \"politics\" },\n    { description: \"For all pet related questions\", slug: \"pets\" },\n    { description: \"Star crossed lovers\", slug: \"astronomy\" },\n    { description: \"Live. Laugh. Lift.\", slug: \"fitness\" },\n    { description: \"stitch me up, scotty\", slug: \"embroidery\" },\n    { description: \"Code is love, code is life\", slug: \"coding\" },\n    { description: \"FOOTIE!\", slug: \"football\" },\n    { description: \"Hey good looking, what you got cooking?\", slug: \"cooking\" }\n  ]);\n  // axios\n  //   .get(`${baseUrl}/topics`)\n  //   .then(res => res.data)\n  //   .then(data => {\n  //     cb(data[\"topics\"]);\n  //   });\n};\n"]},"metadata":{},"sourceType":"module"}